{
  "openapi": "3.0.0",
  "info": {
    "title": "QuickBooks SB",
    "description": "The QuickBooks Online Accounting API is a RESTful API that is used to access QuickBooks companies.\n\nDocs Ref - https://developer.intuit.com/docs/api/accounting",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://{{baseurl}}"
    }
  ],
  "components": {
    "securitySchemes": {
      "oauth2Auth": {
        "type": "http",
        "scheme": "oauth2"
      }
    }
  },
  "tags": [
    {
      "name": "Account",
      "description": "An Account object is a component of a Chart Of Accounts, and is part of a ledger. It is used to record a total monetary amount allocated against a specific use. Accounts are one of five basic types: asset, liability, revenue (income), expenses, or equity. Delete is achieved by setting the Active attribute to false in an object update request; thus, making it inactive. In this type of delete, the record is not permanently deleted, but is hidden for display purposes. References to inactive objects are left intact. \n\nhttps://developer.intuit.com/docs/api/accounting/account"
    },
    {
      "name": "Attachable",
      "description": "https://developer.intuit.com/docs/api/accounting/attachable\n\n\nThis page covers the Attachable, Upload, and Download resources used for attachment management. Attachments are supplemental information linked to a transaction or Item object. They can be files, notes, or a combination of both.\n\nIn the case of file attachments, use an upload endpoint multipart request to upload the files to the QuickBooks attachment list and, optionally, to supply metadata for each via an attachable object. If meta data is not supplied with the upload request, the system creates it.\nIn the case of a note, use the create attachable endpoint.\nFor information about attachments, see the Attachments Developer Guide.\n"
    },
    {
      "name": "Batch",
      "description": "https://developer.intuit.com/docs/api/accounting/batch\n\nThe batch operation enables an application to perform multiple operations in a single request.  For example, in a single batch request an application can create a customer, update an invoice, and read an account.  Compared to multiple requests, a single batch request can improve an application's performance by decreasing network roundtrips and increasing throughput. The individual operations within a batch request are called BatchItemRequest objects.\n\n"
    },
    {
      "name": "Bill",
      "description": "https://developer.intuit.com/docs/api/accounting/bill\n\nA Bill object is an AP transaction representing a request-for-payment from a third party for goods/services rendered and/or received.\n\n"
    },
    {
      "name": "BillPayment",
      "description": "https://developer.intuit.com/docs/api/accounting/billpayment\n\n\nA BillPayment object represents the payment transaction for a bill that the business owner receives from a vendor for goods or services purchased from the vendor. QuickBooks Online supports bill payments through a credit card or a checking account. \nBillPayment.TotalAmt is the total amount associated with this payment. This includes the total of all the payments from the payment line details. If TotalAmt is greater than the total on the lines being paid, the overpayment is treated as a credit and exposed as such on the QuickBooks UI. The total amount cannot be negative."
    },
    {
      "name": "Budget",
      "description": "https://developer.intuit.com/docs/api/accounting/budget\n\nThe Budget endpoint allows you to retrieve the current state of budgets already set up in the user's company file. A budget allows for an amount to be assigned on a monthly, quarterly, or annual basis for a specific account or customer and are created to give a business measurable expense goals. This amount represents how much should be spent against that account or customer in the give time period.\n\n"
    },
    {
      "name": "ChangeDataCapture",
      "description": "https://developer.intuit.com/docs/api/accounting/changedatacapture\n\nThe change data capture (cdc) operation returns a list of objects that have changed since a specified time. This operation is for an app that periodically polls data services in order to refresh its local copy of object data. The app calls the cdc operation, specifying a comma separated list of object types and a date-time stamp specifying how far to look back. Data services returns all objects specified by entityList that have changed since the specified date-time. Look-back time can be up to 30 days."
    },
    {
      "name": "Class",
      "description": "https://developer.intuit.com/docs/api/accounting/class\n\nClass objects provide a way to track different segments of the business so they're not tied to a particular client or project. For example, you can define classes to break down the income and expenses for each business segment. Classes are available to the entire transaction or to individual detail lines of a transaction.\n\nRef - https://developer.intuit.com/docs/0100_quickbooks_online/0200_dev_guides/accounting/class_tracking"
    },
    {
      "name": "CompanyInfo",
      "description": "https://developer.intuit.com/docs/api/accounting/companyinfo\n\nThe CompanyInfo object contains basic company information. In QuickBooks, company info and preferences are displayed in the same place under preferences, so it may be confusing to figure out from user interface which fields may belong to this object. But in general, properties such as company addresses or name are considered company information. Some attributes may exist in both CompanyInfo and Preferences objects.\n\n"
    },
    {
      "name": "CreditMemo",
      "description": "https://developer.intuit.com/docs/api/accounting/creditmemo\n\nThe CreditMemo object is a financial transaction representing a refund or credit of payment or part of a payment for goods or services that have been sold.\n\n"
    },
    {
      "name": "Customer",
      "description": "https://developer.intuit.com/docs/api/accounting/customer\n\nA customer is a consumer of the service or product that your business offers. The Customer object allows you to categorize customers according to your business requirements. To create a job, you must first create a customer and then create a job referencing that customer as a parent with the ParentRef attribute. Some areas a sub-customer/job can be used include:\n\nTo track a job for the top-level customer, such as a kitchen remodel or bathroom remodel.\nMembers of a team or league.\nProperties managed by a Homeowner Association or Property Management Company.\nSee QuickBooks product documentation for more about sub-customers and jobs.\n\n"
    },
    {
      "name": "Department",
      "description": "https://developer.intuit.com/docs/api/accounting/department\n\nThe Department resource provides a way to track transactions based on physical locations such as stores, sales regions, or countries. As you create sales and expense transactions, consistently designate the department to which they belong. "
    },
    {
      "name": "Deposit",
      "description": "https://developer.intuit.com/docs/api/accounting/deposit\n\n\nA deposit object is a transaction that records one or more deposits of the following types:\n\nA customer payment, originally held in the Undeposited Funds account, into the Asset Account specified by the Deposit.DepositToAccountRef attribute. The Deposit.line.LinkedTxn element is used in this case to hold deposit information.\nA new, direct deposit specified by Deposit.Line.DepositLineDetail line detail.\n"
    },
    {
      "name": "Employee",
      "description": "https://developer.intuit.com/docs/api/accounting/employee\n\nAn Employee object represents a person working for the company.\n\nThe DisplayName attribute must be unique.\nThe GivenName, MiddleName, FamilyName, and PrintOnCheckName attributes must not contain a colon (:).\nThe GivenName and FamilyName attributes are required.\nThe PrimaryEmailAddress attribute must contain an at sign (@) and dot (.).\nThe full complement of read, create, delete via deactivation (active=false), and update operations are available both with and without QuickBooks Payroll enabled. However, when Payroll is enabled, support for some attributes is limited:\nTitle—Not supported when QuickBooks Payroll is enabled.\nSuffix—Not supported when QuickBooks Payroll is enabled.\nDisplayName —It’s read only when QuickBooks Payroll is enabled and a concatenation of GivenName MiddleName FamilyName.\nPrintOnCheckName—Not supported when QuickBooks Payroll is enabled.\nBillRate—Not supported when QuickBooks Payroll is enabled.\nSSN—Masked SSNs, as is returned in a response, cannot be passed in a request when QuickBooks Payroll is enabled. Code for this field must be removed before submitting."
    },
    {
      "name": "Estimate",
      "description": "https://developer.intuit.com/docs/api/accounting/estimate\n\nEstimate represents a proposal for a financial transaction from a business to a customer for goods or services proposed to be sold, including proposed pricing.\n\n"
    },
    {
      "name": "ExchangeRate",
      "description": "https://developer.intuit.com/docs/api/accounting/exchangerate\n\nApplicable only for those companies that enable multicurrency, the exchangerate resource provides the ability to query and set exchange rates available to the QuickBooks Online company. This entity works in combination with the companycurrency entity and the Currency Center in the QuickBooks Online UI to manage exchange rates for the company.\n\n\n"
    },
    {
      "name": "Invoice",
      "description": "https://developer.intuit.com/docs/api/accounting/invoice\n\nAn Invoice represents a sales form where the customer pays for a product or service later.\n\n"
    },
    {
      "name": "Item",
      "description": "https://developer.intuit.com/docs/api/accounting/item\n\nAn item is a thing that your company buys, sells, or re-sells, such as products and services. An item is shown as a line on an invoice or other sales form. "
    },
    {
      "name": "JournalEntry",
      "description": "https://developer.intuit.com/docs/api/accounting/journalentry\n\nJournalEntry is a transaction in which:\n\nThere are at least one pair of lines, a debit and a credit, called distribution lines.\nEach distribution line has an account from the Chart of Accounts. Query the Account resource for a listing of the Chart of Accounts.\nThe total of the debit column equals the total of the credit column.\nWhen you record a transaction with a JournalEntry object, the QuickBooks Online UI labels the transaction as JRNL in the register and as General Journal on reports that list transactions."
    },
    {
      "name": "Payment",
      "description": "https://developer.intuit.com/docs/api/accounting/payment\n\nA Payment object records a payment in QuickBooks. The payment can be applied for a particular customer against multiple Invoices and Credit Memos. It can also be created without any Invoice or Credit Memo, by just specifying an amount. "
    },
    {
      "name": "PaymentMethod",
      "description": "https://developer.intuit.com/docs/api/accounting/paymentmethod\n\nThe PaymentMethod resource provides the method of payment for received goods. "
    },
    {
      "name": "Preferences",
      "description": "https://developer.intuit.com/docs/api/accounting/preferences\n\nThe Preferences resource represents a set of company preferences that control application behavior in QuickBooks Online. They are mostly exposed as read-only through the Preferences endpoint with only a very small subset of them available as writable. Preferences are not necessarily honored when making requests via the QuickBooks API because a lot of them control UI behavior in the application and may not be applicable for apps.\n\nBusiness Rules\n\nThe create operation is not supported.\nThe read request retrieves all preferences. There is no notion of preference objects or object IDs.\nUpdate operations are supported for a limited subset of preferences.\nThe Delete operation is not supported.\nQuery is supported with sorting and filtering enabled for Metadata timestamp attributes. Pagination is not supported.\nOtherPrefs type is used as an extension mechanism to contain additional attributes as Name/Value pairs.\n\n"
    },
    {
      "name": "Purchase",
      "description": "https://developer.intuit.com/docs/api/accounting/purchase\n\nA Purchase object represents an expense, such as a purchase made from a vendor. There are three types of purchases: Cash, Check, and Credit Card.\n\nCash Purchase contains information regarding a payment made in cash.\nCheck Purchase contains information regarding a payment made by check.\nCredit Card Purchase contains information regarding a payment made by credit card or refunded/credited back to a credit card."
    },
    {
      "name": "PurchaseOrder",
      "description": "https://developer.intuit.com/docs/api/accounting/purchaseorder\n\nThe PurchaseOrder object is a non-posting transaction representing a request to purchase goods or services from a third party.\n\n"
    },
    {
      "name": "RefundReceipt",
      "description": "https://developer.intuit.com/docs/api/accounting/refundreceipt\n\nA RefundReceipt object represents a refund to the customer for a product or service that was provided.\n\n"
    },
    {
      "name": "Reports"
    },
    {
      "name": "SalesReceipt",
      "description": "https://developer.intuit.com/docs/api/accounting/salesreceipt\n\nA SalesReceipt object represents the sales receipt that is given to a customer. A sales receipt is similar to an invoice. However, for a sales receipt, payment is received as part of the sale of goods and services. The sales receipt specifies a deposit account where the customer's payment is deposited. If the deposit account is not specified, the Undeposited Account is used."
    },
    {
      "name": "TaxAgency",
      "description": "https://developer.intuit.com/docs/api/accounting/taxagency\n\nA TaxAgency object is associated with a tax rate and identifies the agency to which that tax rate applies, that is, the entity that collects those taxes.\n\n"
    },
    {
      "name": "TaxCode",
      "description": "https://developer.intuit.com/docs/api/accounting/taxcode\n\nA TaxCode object is used to track the taxable or non-taxable status of products, services, and customers. You can assign a sales tax code to each of your products, services, and customers based on their taxable or non-taxable status. You can then use these codes to generate reports that provide information to the tax agencies about the taxable or non-taxable status of certain sales."
    },
    {
      "name": "TaxRate",
      "description": "https://developer.intuit.com/docs/api/accounting/taxrate\n\nA TaxRate object represents rate applied to calculate tax liability. Use the TaxService entity to create a taxrate. See Global tax model for more information about using TaxRate objects and the tax model in general.\n\n"
    },
    {
      "name": "TaxService",
      "description": "https://developer.intuit.com/docs/api/accounting/taxservice\n\nThe TaxService resource allows you to perform the following actions:\n\nCreate a new TaxCode object and specify a list of existing tax rates to be associated to that tax code. To retrieve a list of existing TaxCode objects, query the TaxCode resource.\nCreate a new TaxRate object, dynamically. To retrieve a list of existing tax rates, query the TaxRate resource.\n"
    },
    {
      "name": "Term",
      "description": "https://developer.intuit.com/docs/api/accounting/term\n\nA Term object represents the terms under which a sale is made, typically expressed in the form of days due after the goods are received. Optionally, a discount of the total amount may be applied if payment is made within a stipulated time. For example, net 30 indicates that payment is due within 30 days. A term of 2%/15 net 60 indicates that payment is due within 60 days, with a discount of 2% if payment is made within 15 days. This resource also supports:\n\nAn absolute due date.\nA number of days from a start date.\nA percent discount.\nAn absolute discount.\n"
    },
    {
      "name": "TimeActivity",
      "description": "https://developer.intuit.com/docs/api/accounting/timeactivity\n\nThe TimeActivity object represents a record of time worked by a vendor or employee.\n\n"
    },
    {
      "name": "Transfer",
      "description": "https://developer.intuit.com/docs/api/accounting/transfer\n\nA Transfer represents a transaction where funds are moved between two accounts from the company's QuickBooks chart of accounts.\n\n"
    },
    {
      "name": "Vendor",
      "description": "https://developer.intuit.com/docs/api/accounting/vendor\n\nThe Vendor object represents the seller from whom your company purchases any service or product.\n\n"
    },
    {
      "name": "VendorCredit",
      "description": "https://developer.intuit.com/docs/api/accounting/vendorcredit\n\n\nThe VendorCredit object is an accounts payable transaction that represents a refund or credit of payment for goods or services. It is a credit that a vendor owes you for various reasons such as overpaid bill, returned merchandise, or other reasons.\n\n"
    }
  ],
  "paths": {
    "/v3/company/{companyid}/account": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Account-Update",
        "description": "Update an account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "Name": "AR3-Updated111",
                  "SubAccount": false,
                  "FullyQualifiedName": "AR3-Updated",
                  "Active": true,
                  "Classification": "Asset",
                  "AccountType": "Accounts Receivable",
                  "AccountSubType": "AccountsReceivable",
                  "CurrentBalance": 0,
                  "CurrentBalanceWithSubAccounts": 0,
                  "CurrencyRef": {
                    "value": "USD",
                    "name": "United States Dollar"
                  },
                  "domain": "QBO",
                  "sparse": false,
                  "Id": "94",
                  "SyncToken": "3"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/account/1": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Account-ReadById",
        "description": "Get the Account which has accountId as 1",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/query": {
      "post": {
        "tags": [
          "VendorCredit"
        ],
        "summary": "VendorCredit-ReadAll",
        "description": "Read all vendorcredit objects using the 'Query' endpoint\nMethod : POST\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": "select * from vendorcredit startposition 1 maxresults 5"
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/text"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/attachable": {
      "post": {
        "tags": [
          "Attachable"
        ],
        "summary": "Attachable-Delete",
        "description": "Delete an attachable object by Id\nAccept:application/json\nMethod - POST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "Note": "This is an attached note. Updated1",
                  "domain": "QBO",
                  "sparse": false,
                  "Id": "5000000000000029383",
                  "SyncToken": "2",
                  "MetaData": {
                    "CreateTime": "2016-08-18T00:18:04-07:00",
                    "LastUpdatedTime": "2016-08-18T00:18:04-07:00"
                  },
                  "AttachableRef": [
                    {
                      "EntityRef": {
                        "value": "130",
                        "type": "Invoice"
                      },
                      "IncludeOnSend": false
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "operation",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "delete"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/attachable/5000000000000029383": {
      "get": {
        "tags": [
          "Attachable"
        ],
        "summary": "Attachable-ReadById",
        "description": "Retrieve an attachable object by Id\nAccept:application/json\nMethod - GET",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/upload": {
      "post": {
        "tags": [
          "Attachable"
        ],
        "summary": "Upload-Attachments",
        "description": "Uploading and linking new attachments\n\nhttps://developer.intuit.com/docs/0100_quickbooks_online/0200_dev_guides/accounting/attachments#Uploading_and_linking_new_attachments\n\nIf the attachment is not in the Attachment list already, it's possible to upload it and link it to the object in one multipart operation.\n\nOperation:      POST https://quickbooks.api.intuit.com/v3/company/companyID/upload\nContent type: multipart/form-data\n\nRequest body\n\nThe following sample code shows the multipart request body for uploading a file and its supporting Attachable metatdata object, with the result of it being both added to the Attachment list and added to the object.\n\nThe Attachable object accompanying this request supplies metadata and object information to which the attachment is linked. \nEach part of the multipart request is separated by a boundary.  In the sample below, the string  --YOjcLaTlykb6OxfYJx4O07j1MweeMFem is used.  You can use any random and unique string.\nThe file to be uploaded and its Attachable object are paired together via the name parameter in the part header for each one.\nThe name parameter for the file part is of the form file_content_nn, where nn is a unique index number among the set of files being uploaded.\nThe name parameter for the Attachable object is of the form file_metadata_nn, where nn corresponds to the file index number used with the content .\nThe file or files are stored in the Attachment list with the name specified by the filename parameter.\nIf the data supplied with the Attachable object cannot be validated, an error is returned and the file is not uploaded.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": "--37a1965f87babd849241a530ad71e169\nContent-Disposition: form-data; name=\"file_metadata_0\"\nContent-Type: application/json; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n\n{\n    \"AttachableRef\": [\n    {\n      \"EntityRef\": {\n        \"type\": \"Invoice\",\n        \"value\": \"173\"\n      }\n    }\n  ],\n   \"FileName\": \"receipt_nov15.jpg\",\n    \"ContentType\": \"image/jpg\"\n  }\n--37a1965f87babd849241a530ad71e169\nContent-Disposition: form-data; name=\"file_content_0\"; filename=\"398535758.jpg\"\nContent-Type: image/jpeg\nContent-Transfer-Encoding: base64\n\n/9j/4AAQSkZJRgABAQEAlgCWAAD/4ge4SUNDX1BST0ZJTEUAAQEAAAeoYXBwbAIgAABtbnRyUkdC\nIFhZWiAH2QACABkACwAaAAthY3NwQVBQTAAAAABhcHBsAAAAAAAAAAAAAAAAAAAAAAAA9tYAAQAA\nAADTLWFwcGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtk\nZXNjAAABCAAAAG9kc2NtAAABeAAABWxjcHJ0AAAG5AAAADh3dHB0AAAHHAAAABRyWFlaAAAHMAAA\nABRnWFlaAAAHRAAAABRiWFlaAAAHWAAAABRyVFJDAAAHbAAAAA5jaGFkAAAHfAAAACxiVFJDAAAH\nbAAAAA5nVFJDAAAHbAAAAA5kZXNjAAAAAAAAABRHZW5lcmljIFJHQiBQcm9maWxlAAAAAAAAAAAA\nAAAUR2VuZXJpYyBSR0IgUHJvZmlsZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAbWx1YwAAAAAAAAAeAAAADHNrU0sAAAAoAAABeGhySFIAAAAoAAABoGNh\nRVMAAAAkAAAByHB0QlIAAAAmAAAB7HVrVUEAAAAqAAACEmZyRlUAAAAoAAACPHpoVFcAAAAWAAAC\nZGl0SVQAAAAoAAACem5iTk8AAAAmAAAComtvS1IAAAAWAAACyGNzQ1oAAAAiAAAC3mhlSUwAAAAe\nAAADAGRlREUAAAAsAAADHmh1SFUAAAAoAAADSnN2U0UAAAAmAAAConpoQ04AAAAWAAADcmphSlAA\nAAAaAAADiHJvUk8AAAAkAAADomVsR1IAAAAiAAADxnB0UE8AAAAmAAAD6G5sTkwAAAAoAAAEDmVz\nRVMAAAAmAAAD6HRoVEgAAAAkAAAENnRyVFIAAAAiAAAEWmZpRkkAAAAoAAAEfHBsUEwAAAAsAAAE\npHJ1UlUAAAAiAAAE0GFyRUcAAAAmAAAE8mVuVVMAAAAmAAAFGGRhREsAAAAuAAAFPgBWAWEAZQBv\nAGIAZQBjAG4A/QAgAFIARwBCACAAcAByAG8AZgBpAGwARwBlAG4AZQByAGkBDQBrAGkAIABSAEcA\nQgAgAHAAcgBvAGYAaQBsAFAAZQByAGYAaQBsACAAUgBHAEIAIABnAGUAbgDoAHIAaQBjAFAAZQBy\nAGYAaQBsACAAUgBHAEIAIABHAGUAbgDpAHIAaQBjAG8EFwQwBDMEMAQ7BEwEPQQ4BDkAIAQ/BEAE\nPgREBDAEOQQ7ACAAUgBHAEIAUAByAG8AZgBpAGwAIABnAOkAbgDpAHIAaQBxAHUAZQAgAFIAVgBC\nkBp1KAAgAFIARwBCACCCcl9pY8+P8ABQAHIAbwBmAGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIA\naQBjAG8ARwBlAG4AZQByAGkAcwBrACAAUgBHAEIALQBwAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg\n1QS4XNMMx3wATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAA\nUgBHAEIAIAXbBdwF3AXZAEEAbABsAGcAZQBtAGUAaQBuAGUAcwAgAFIARwBCAC0AUAByAG8AZgBp\nAGwAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYAaQBsZm6QGgAgAFIARwBCACBj\nz4/wZYdO9k4AgiwAIABSAEcAQgAgMNcw7TDVMKEwpDDrAFAAcgBvAGYAaQBsACAAUgBHAEIAIABn\nAGUAbgBlAHIAaQBjA5MDtQO9A7kDugPMACADwAPBA78DxgOvA7sAIABSAEcAQgBQAGUAcgBmAGkA\nbAAgAFIARwBCACAAZwBlAG4A6QByAGkAYwBvAEEAbABnAGUAbQBlAGUAbgAgAFIARwBCAC0AcABy\nAG8AZgBpAGUAbA5CDhsOIw5EDh8OJQ5MACAAUgBHAEIAIA4XDjEOSA4nDkQOGwBHAGUAbgBlAGwA\nIABSAEcAQgAgAFAAcgBvAGYAaQBsAGkAWQBsAGUAaQBuAGUAbgAgAFIARwBCAC0AcAByAG8AZgBp\nAGkAbABpAFUAbgBpAHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE\nOAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZBACAAUgBHAEIAIAYn\nBkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAAUAByAG8AZgBpAGwAZQBHAGUAbgBlAHIA\nZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGV0ZXh0AAAAAENvcHlyaWdodCAyMDA3\nIEFwcGxlIEluYy4sIGFsbCByaWdodHMgcmVzZXJ2ZWQuAFhZWiAAAAAAAADzUgABAAAAARbPWFla\nIAAAAAAAAHRNAAA97gAAA9BYWVogAAAAAAAAWnUAAKxzAAAXNFhZWiAAAAAAAAAoGgAAFZ8AALg2\nY3VydgAAAAAAAAABAc0AAHNmMzIAAAAAAAEMQgAABd7///MmAAAHkgAA/ZH///ui///9owAAA9wA\nAMBs/+EAgEV4aWYAAE1NACoAAAAIAAUBEgADAAAAAQABAAABGgAFAAAAAQAAAEoBGwAFAAAAAQAA\nAFIBKAADAAAAAQACAACHaQAEAAAAAQAAAFoAAAAAAAA6mQAAAGQAADqZAAAAZAACoAIABAAAAAEA\nAAAuoAMABAAAAAEAAAAUAAAAAP/bAEMAAgEBAgEBAgIBAgICAgIDBQMDAwMDBgQEAwUHBgcHBwYG\nBgcICwkHCAoIBgYJDQkKCwsMDAwHCQ0ODQwOCwwMC//bAEMBAgICAwIDBQMDBQsIBggLCwsLCwsL\nCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLC//AABEIABQALgMBIgAC\nEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAA\nAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4\nOTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaan\nqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQAD\nAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEG\nEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpT\nVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4\nubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/APkb41eO\nNYtfi94oSDVdRVF1a74FzJgfvn96j+Kmj+O/gj/wj3/C159Q0MeK9Et/EekmfU1IvdPuN/kzrtkO\n0N5b/K2GGOQKzvjnz8YPFX/YVvP/AEc9fePiv9qXwn4K+Eut674A8S+Br3xl4e/Zd8MaZ4dF0LPU\nHtvENte3TtbwwThla8h3RuYipI+UspFfueIryw6p8kOa+n5Ja62310Z+V4XDRxU5RlPl8z4O0S/8\nYeJfB+t+IfD1xrN7oPhpbZtV1GG7ZrXTxczeRb+bJvwDLLlEAyWYHA4OK/hTxP4i8ceKdI0Xwrq9\n1eanr13FY6fANS2fappZFjRVdnCgF2UFiQozkkDmv0r+KX7VPhO/8JftJaX8I/HPwu0qXxf4c8C+\nJZIA1hDb63cpldfjtwI2WS7NvFGnkINyyMpXY7Fqq/GDUvhB4d+IXxP17TPHvwc1nTfiB8a/h/4o\n0O10zVbW4lstChubNbxpoto+zxARztLHyAgZnADc8NPN5ydpUbXtbfqob6dOZ9vha8zu/smElpXX\nW+3eW2vku+5+fXjvw38RPhlZm58eRa7ptp/a97oCXT3m+3nv7Jtt3BDKkhWUwtwzISgPG4mux/ZD\n8Y6tefEO++06nqL7dOkxm6k4/exf7VfRX/BRD9oTTfiz+xBaaD8NPGfgK803wz8XvFf2nRLOWzjv\n30+XU5pNKntIUQSPbeU+8yxkKUK7i+AB8x/sc/8AJQ7/AP7Bz/8Ao2KuqlWnicLOdSKTu1b0em/d\nanFVpRw+IjCnK60d/X0O/wDil+zfoWofE7xJNcXOqb31W7JxJHj/AF7/APTOsH/hmPw//wA/Gqf9\n/I//AI3RRXRTk+VamM4rmegv/DMfh/H/AB8ap/38j/8AjdB/Zj8Pn/l41Trn/WR9f+/dFFVzPuRZ\nXEP7Mfh89bjVOP8AppFx/wCQ69I/Zf8A2d9F0z4hXP2S61Qb9Olzl4z0lh/6Z+9FFY4mT9lLU1oJ\nc6P/2Q==\n\n--37a1965f87babd849241a530ad71e169--"
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "multipart/form-data;boundary=37a1965f87babd849241a530ad71e169"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/batch": {
      "post": {
        "tags": [
          "Batch"
        ],
        "summary": "Batch",
        "description": "Multiple operations using batch query\nContent-Type:application/json\nMethod - POST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "BatchItemRequest": [
                    {
                      "bId": "bid1",
                      "operation": "create",
                      "Vendor": {
                        "DisplayName": "Smith Family Store"
                      }
                    },
                    {
                      "bId": "bid2",
                      "operation": "delete",
                      "Invoice": {
                        "Id": "129",
                        "SyncToken": "0"
                      }
                    },
                    {
                      "bId": "bid3",
                      "operation": "update",
                      "SalesReceipt": {
                        "domain": "QBO",
                        "sparse": true,
                        "Id": "11",
                        "SyncToken": "0",
                        "PrivateNote": "A private note."
                      }
                    },
                    {
                      "bId": "bid4",
                      "Query": "select * from SalesReceipt"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/bill": {
      "post": {
        "tags": [
          "Bill"
        ],
        "summary": "Bill-Delete",
        "description": "Update a bill\nContent-Type:application/json\nMethod - POST\n\nSample Request\n\n{\n    \"Id\": \"149\",\n    \"SyncToken\": \"0\"\n}\n\nSample Response - \n\n{\n  \"Bill\": {\n    \"domain\": \"QBO\",\n    \"status\": \"Deleted\",\n    \"Id\": \"149\"\n  },\n  \"time\": \"2016-08-18T10:02:41.570-07:00\"\n}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "Id": "149",
                  "SyncToken": "0"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "operation",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "delete"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/bill/1": {
      "get": {
        "tags": [
          "Bill"
        ],
        "summary": "Bill-GetById",
        "description": "Retrieve a bill by Id\nAccept:application/json\nMethod - GET",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/billpayment": {
      "post": {
        "tags": [
          "BillPayment"
        ],
        "summary": "BillPayment-Update",
        "description": "Update a BillPayment\nContent-Type:application/json\nMethod - POST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "VendorRef": {
                    "value": "62",
                    "name": "Test"
                  },
                  "PayType": "Check",
                  "CheckPayment": {
                    "BankAccountRef": {
                      "value": "35",
                      "name": "Checking"
                    }
                  },
                  "TotalAmt": 100,
                  "PrivateNote": "Updated Note",
                  "Line": [
                    {
                      "Amount": 100,
                      "LinkedTxn": [
                        {
                          "TxnId": "153",
                          "TxnType": "Bill"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/billpayment/118": {
      "get": {
        "tags": [
          "BillPayment"
        ],
        "summary": "BillPayment-ReadById",
        "description": "Retrieve BillPayment by Id\nMethod - GET",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/cdc": {
      "get": {
        "tags": [
          "ChangeDataCapture"
        ],
        "summary": "CDC-Read",
        "description": "Retrive changed Bill and invoice objects since Aug10,2016\nMethod - GET",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/text"
          },
          {
            "name": "entities",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "bill,invoice"
          },
          {
            "name": "changedSince",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "YYYY-MM-DD"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/class": {
      "post": {
        "tags": [
          "Class"
        ],
        "summary": "Class-Delete",
        "description": "Delete a Class entry\nMethod - POST\n\nSample request payload \n\n{\n    \"Id\": \"5000000000000018727\",\n    \"SyncToken\": \"1\"\n}\n\nSample response payload\n\n{\n  \"time\": \"2016-08-18T11:53:27.601-07:00\"\n}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "Id": "5000000000000018727",
                  "SyncToken": "1"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "operation",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "delete"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/class/5000000000000018727": {
      "get": {
        "tags": [
          "Class"
        ],
        "summary": "Class-ReadById",
        "description": "Read a Class object by Id\nMethod - GET",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/companyinfo/{companyid}": {
      "get": {
        "tags": [
          "CompanyInfo"
        ],
        "summary": "CompanyInfo-ReadById",
        "description": "Method : GET",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/creditmemo": {
      "post": {
        "tags": [
          "CreditMemo"
        ],
        "summary": "CreditMemo-Delete",
        "description": "Delete a credit memo by Id\nMethod : GET\n\nSample request payload \n\n{\n    \"Id\": \"160\",\n    \"SyncToken\": \"2\"\n}\n\nSample response payload \n\n{\n  \"CreditMemo\": {\n    \"domain\": \"QBO\",\n    \"status\": \"Deleted\",\n    \"Id\": \"160\"\n  },\n  \"time\": \"2016-08-18T13:16:22.310-07:00\"\n}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "Id": "160",
                  "SyncToken": "2"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "operation",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "delete"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/creditmemo/160": {
      "get": {
        "tags": [
          "CreditMemo"
        ],
        "summary": "CreditMemo-ReadById",
        "description": "Read a credit memo by Id\nMethod : GET",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/customer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Customer-Delete",
        "description": "Delete a customer by Id\nMethod : POST\n\nCustomer(or any Name List entities) can't be deleted permanently. It can only be inactived by setting the value of 'Active' attribute to false.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "domain": "QBO",
                  "sparse": true,
                  "Id": "67",
                  "SyncToken": "0",
                  "Active": false
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/customer/{customerid}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Customer-ReadById",
        "description": "Read a customer entry by Id\nMethod : GET",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "customerid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/department": {
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Department-Delete",
        "description": "Delete a department object\nMethod : POST\n\nDelete is achieved by setting the Active attribute to false in an entity update request; thus, making it inactive. In this type of delete, the record is not permanently deleted, but is hidden for display purposes. References to inactive objects are left intact.\n\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "Name": "Marketing Department-Updated",
                  "SubDepartment": false,
                  "FullyQualifiedName": "Marketing Department",
                  "Active": false,
                  "domain": "QBO",
                  "sparse": false,
                  "Id": "1",
                  "SyncToken": "2"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/department/1": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Department-ReadById",
        "description": "Read a department object\nMethod : GET",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/deposit": {
      "post": {
        "tags": [
          "Deposit"
        ],
        "summary": "Deposit-Delete",
        "description": "Delete a deposit object by Id\nMethod : POST\n\nSample request payload \n\n{\n    \"Id\": \"162\",\n    \"SyncToken\": \"1\"\n}\n\nSample response payload\n\n{\n  \"Deposit\": {\n    \"domain\": \"QBO\",\n    \"status\": \"Deleted\",\n    \"Id\": \"162\"\n  },\n  \"time\": \"2016-08-18T16:01:36.997-07:00\"\n}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "Id": "162",
                  "SyncToken": "1"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "operation",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "delete"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/deposit/162": {
      "get": {
        "tags": [
          "Deposit"
        ],
        "summary": "Deposit-ReadById",
        "description": "Read a deposit object by Id\nMethod : POST",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/employee": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Employee-Delete",
        "description": "Delete an employee object\nMethod : POST\n\nDelete via deactivation (active=false)\n\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "SSN": "XXX-XX-XXXX",
                  "PrimaryAddr": {
                    "Id": "105",
                    "Line1": "45 N. Elm Street",
                    "City": "Middlefield",
                    "CountrySubDivisionCode": "CA",
                    "PostalCode": "93242"
                  },
                  "BillableTime": false,
                  "domain": "QBO",
                  "sparse": false,
                  "Id": "68",
                  "SyncToken": "2",
                  "MetaData": {
                    "CreateTime": "2016-08-18T16:04:16-07:00",
                    "LastUpdatedTime": "2016-08-18T16:04:16-07:00"
                  },
                  "GivenName": "John",
                  "FamilyName": "Meuller",
                  "DisplayName": "John Meuller - Updated",
                  "PrintOnCheckName": "John Meuller",
                  "Active": false,
                  "PrimaryPhone": {
                    "FreeFormNumber": "408-525-1234"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/employee/68": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Employee-ReadById",
        "description": "Retrive an employee object by ID\nMethod : GET\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/estimate": {
      "post": {
        "tags": [
          "Estimate"
        ],
        "summary": "Estimate-Delete",
        "description": "Delete an Estimate object by Id\nMethod : POST\n\nSample request sample \n\n{\n    \"Id\": \"163\",\n    \"SyncToken\": \"1\"\n}\n\nSample response sample \n\n{\n  \"Estimate\": {\n    \"domain\": \"QBO\",\n    \"status\": \"Deleted\",\n    \"Id\": \"163\"\n  },\n  \"time\": \"2016-08-18T16:26:18.345-07:00\"\n}\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "Id": "163",
                  "SyncToken": "1"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "operation",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "delete"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/estimate/163": {
      "get": {
        "tags": [
          "Estimate"
        ],
        "summary": "Estimate-ReadById",
        "description": "Read an Estimate object by Id\nMethod : POST\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/exchangerate": {
      "get": {
        "tags": [
          "ExchangeRate"
        ],
        "summary": "ExchangeRate - GetDetails",
        "description": "Get ExchangeRate\nMethod : GET\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "sourcecurrencycode",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "USD"
          },
          {
            "name": "asofdate",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "2017-04-25"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/invoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Invoice-Void",
        "description": "Void an invoice object by Id\nMethod : POST\n\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "Id": "173",
                  "SyncToken": "2"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "operation",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "void"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/invoice/147": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Invoice-ReadById",
        "description": "Read an invoice object by Id\nMethod : POST\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/item": {
      "post": {
        "tags": [
          "Item"
        ],
        "summary": "Item-Delete",
        "description": "Delete an item object\nMethod : POST\n\nItem object can't be deleted permanently. It can only be dactivated. \n\nDelete endpoint returns full item details.\n\nSample response payload \n\n{\n  \"Item\": {\n    \"Name\": \"Garden Supplies-Updated (deleted)\",\n    \"Active\": false,\n    \"FullyQualifiedName\": \"Garden Supplies-Updated (deleted)\",\n    \"Taxable\": false,\n    \"UnitPrice\": 0,\n    \"Type\": \"Inventory\",\n    \"IncomeAccountRef\": {\n      \"value\": \"79\",\n      \"name\": \"Sales of Product Income\"\n    },\n    \"PurchaseCost\": 0,\n    \"ExpenseAccountRef\": {\n      \"value\": \"80\",\n      \"name\": \"Cost of Goods Sold\"\n    },\n    \"AssetAccountRef\": {\n      \"value\": \"81\",\n      \"name\": \"Inventory Asset\"\n    },\n    \"TrackQtyOnHand\": true,\n    \"QtyOnHand\": 0,\n    \"InvStartDate\": \"2015-01-01\",\n    \"domain\": \"QBO\",\n    \"sparse\": false,\n    \"Id\": \"20\",\n    \"SyncToken\": \"2\",\n    \"MetaData\": {\n      \"CreateTime\": \"2016-08-18T20:05:48-07:00\",\n      \"LastUpdatedTime\": \"2016-08-18T20:09:43-07:00\"\n    }\n  },\n  \"time\": \"2016-08-18T20:09:43.174-07:00\"\n}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "Name": "Garden Supplies-Updated",
                  "Active": false,
                  "FullyQualifiedName": "Garden Supplies-Updated",
                  "Taxable": false,
                  "UnitPrice": 0,
                  "Type": "Inventory",
                  "IncomeAccountRef": {
                    "value": "79",
                    "name": "Sales of Product Income"
                  },
                  "PurchaseCost": 0,
                  "ExpenseAccountRef": {
                    "value": "80",
                    "name": "Cost of Goods Sold"
                  },
                  "AssetAccountRef": {
                    "value": "81",
                    "name": "Inventory Asset"
                  },
                  "TrackQtyOnHand": true,
                  "QtyOnHand": 10,
                  "InvStartDate": "2015-01-01",
                  "domain": "QBO",
                  "sparse": false,
                  "Id": "20",
                  "SyncToken": "0"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/item/<ID>": {
      "get": {
        "tags": [
          "Item"
        ],
        "summary": "Item-ReadById",
        "description": "Read an Item by Id\nMethod : GET\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/journalentry": {
      "post": {
        "tags": [
          "JournalEntry"
        ],
        "summary": "JournalEntry-Delete",
        "description": "Delete an journalentry object\nMethod : POST\n\nSample request payload \n\n{\n    \"Id\": \"167\",\n    \"SyncToken\": \"0\"\n}\n\nSample response payload \n\n{\n  \"JournalEntry\": {\n    \"domain\": \"QBO\",\n    \"status\": \"Deleted\",\n    \"Id\": \"167\"\n  },\n  \"time\": \"2016-08-18T20:16:26.585-07:00\"\n}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "Id": "167",
                  "SyncToken": "0"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "operation",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "delete"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/journalentry/8": {
      "get": {
        "tags": [
          "JournalEntry"
        ],
        "summary": "JournalEntry-ReadById",
        "description": "Read an journalentry object by Id\nMethod : POST\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/payment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Payment-Delete",
        "description": "Delete a payment object\nMethod : POST\n\nSample response payload\n\n{\n  \"Payment\": {\n    \"domain\": \"QBO\",\n    \"status\": \"Deleted\",\n    \"Id\": \"174\"\n  },\n  \"time\": \"2016-08-23T20:06:18.696-07:00\"\n}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "Id": "174",
                  "SyncToken": "1"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "operation",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "delete"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/payment/174": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Payment-ReadByID",
        "description": "Read a payment object by Id\nMethod : GET\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/paymentmethod": {
      "post": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "PaymentMethod-Delete",
        "description": "Delete a payment method\nMethod : GET\n\nDelete is achieved by setting the Active attribute to false in an object update request; thus, making it inactive. In this type of delete, the record is not permanently deleted, but is hidden for display purposes. References to inactive objects are left intact.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "Name": "Business Check-Updated",
                  "Active": false,
                  "Type": "NON_CREDIT_CARD",
                  "domain": "QBO",
                  "sparse": false,
                  "Id": "8",
                  "SyncToken": "0",
                  "MetaData": {
                    "CreateTime": "2016-08-23T20:09:50-07:00",
                    "LastUpdatedTime": "2016-08-23T20:09:50-07:00"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/paymentmethod/8": {
      "get": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "PaymentMethod-ReadById",
        "description": "Read a payment method\nMethod : GET\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/preferences": {
      "get": {
        "tags": [
          "Preferences"
        ],
        "summary": "Preference-Read",
        "description": "Read the preference object\nMethod : POST\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "post": {
        "tags": [
          "Preferences"
        ],
        "summary": "Preference-Update",
        "description": "Update the preference object endpoint\nMethod : POST\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "AccountingInfoPrefs": {
                    "TrackDepartments": true,
                    "DepartmentTerminology": "Location",
                    "ClassTrackingPerTxn": false,
                    "ClassTrackingPerTxnLine": true,
                    "CustomerTerminology": "Customers"
                  },
                  "ProductAndServicesPrefs": {
                    "ForSales": true,
                    "ForPurchase": true,
                    "QuantityWithPriceAndRate": true,
                    "QuantityOnHand": true
                  },
                  "SalesFormsPrefs": {
                    "CustomField": [
                      {
                        "CustomField": [
                          {
                            "Name": "SalesFormsPrefs.UseSalesCustom3",
                            "Type": "BooleanType",
                            "BooleanValue": false
                          },
                          {
                            "Name": "SalesFormsPrefs.UseSalesCustom2",
                            "Type": "BooleanType",
                            "BooleanValue": false
                          },
                          {
                            "Name": "SalesFormsPrefs.UseSalesCustom1",
                            "Type": "BooleanType",
                            "BooleanValue": true
                          }
                        ]
                      },
                      {
                        "CustomField": [
                          {
                            "Name": "SalesFormsPrefs.SalesCustomName1",
                            "Type": "StringType",
                            "StringValue": "Crew #"
                          }
                        ]
                      }
                    ],
                    "CustomTxnNumbers": false,
                    "AllowDeposit": true,
                    "AllowDiscount": true,
                    "DefaultDiscountAccount": "86",
                    "AllowEstimates": true,
                    "ETransactionEnabledStatus": "NotApplicable",
                    "ETransactionAttachPDF": false,
                    "ETransactionPaymentEnabled": false,
                    "IPNSupportEnabled": false,
                    "AllowServiceDate": false,
                    "AllowShipping": false,
                    "DefaultTerms": {
                      "value": "3"
                    },
                    "DefaultCustomerMessage": "Thank you for your business and have a great day!"
                  },
                  "EmailMessagesPrefs": {
                    "InvoiceMessage": {
                      "Subject": "Invoice from Craig's Design and Landscaping Services",
                      "Message": "Your invoice is attached.  Please remit payment at your earliest convenience.\nThank you for your business - we appreciate it very much.\n\nSincerely,\nCraig's Design and Landscaping Services"
                    },
                    "EstimateMessage": {
                      "Subject": "Estimate from Craig's Design and Landscaping Services",
                      "Message": "Please review the estimate below.  Feel free to contact us if you have any questions.\nWe look forward to working with you.\n\nSincerely,\nCraig's Design and Landscaping Services"
                    },
                    "SalesReceiptMessage": {
                      "Subject": "Sales Receipt from Craig's Design and Landscaping Services",
                      "Message": "Your sales receipt is attached.\nThank you for your business - we appreciate it very much.\n\nSincerely,\nCraig's Design and Landscaping Services"
                    },
                    "StatementMessage": {
                      "Subject": "Statement from Craig's Design and Landscaping Services",
                      "Message": "Your statement is attached.  Please remit payment at your earliest convenience.\nThank you for your business - we appreciate it very much.\n\nSincerely,\nCraig's Design and Landscaping Services"
                    }
                  },
                  "VendorAndPurchasesPrefs": {
                    "TrackingByCustomer": true,
                    "BillableExpenseTracking": true,
                    "POCustomField": [
                      {
                        "CustomField": [
                          {
                            "Name": "PurchasePrefs.UsePurchaseCustom3",
                            "Type": "BooleanType",
                            "BooleanValue": false
                          },
                          {
                            "Name": "PurchasePrefs.UsePurchaseCustom2",
                            "Type": "BooleanType",
                            "BooleanValue": true
                          },
                          {
                            "Name": "PurchasePrefs.UsePurchaseCustom1",
                            "Type": "BooleanType",
                            "BooleanValue": true
                          }
                        ]
                      },
                      {
                        "CustomField": [
                          {
                            "Name": "PurchasePrefs.PurchaseCustomName2",
                            "Type": "StringType",
                            "StringValue": "Sales Rep"
                          },
                          {
                            "Name": "PurchasePrefs.PurchaseCustomName1",
                            "Type": "StringType",
                            "StringValue": "Crew #"
                          }
                        ]
                      }
                    ]
                  },
                  "TimeTrackingPrefs": {
                    "UseServices": true,
                    "BillCustomers": true,
                    "ShowBillRateToAll": false,
                    "WorkWeekStartDate": "Monday",
                    "MarkTimeEntriesBillable": true
                  },
                  "TaxPrefs": {
                    "UsingSalesTax": true,
                    "TaxGroupCodeRef": {
                      "value": "2"
                    }
                  },
                  "CurrencyPrefs": {
                    "MultiCurrencyEnabled": true,
                    "HomeCurrency": {
                      "value": "USD"
                    }
                  },
                  "ReportPrefs": {
                    "ReportBasis": "Accrual",
                    "CalcAgingReportFromTxnDate": false
                  },
                  "OtherPrefs": {
                    "NameValue": [
                      {
                        "Name": "SalesFormsPrefs.DefaultCustomerMessage",
                        "Value": "Thank you for your business and have a great day!"
                      },
                      {
                        "Name": "SalesFormsPrefs.DefaultItem",
                        "Value": "1"
                      },
                      {
                        "Name": "DTXCopyMemo",
                        "Value": "false"
                      },
                      {
                        "Name": "UncategorizedAssetAccountId",
                        "Value": "32"
                      },
                      {
                        "Name": "UncategorizedIncomeAccountId",
                        "Value": "30"
                      },
                      {
                        "Name": "UncategorizedExpenseAccountId",
                        "Value": "31"
                      },
                      {
                        "Name": "MasAccountId",
                        "Value": "35"
                      },
                      {
                        "Name": "SFCEnabled",
                        "Value": "true"
                      }
                    ]
                  },
                  "domain": "QBO",
                  "sparse": false,
                  "Id": "1",
                  "SyncToken": "4",
                  "MetaData": {
                    "CreateTime": "2016-01-13T01:07:08-08:00",
                    "LastUpdatedTime": "2016-08-23T20:12:45-07:00"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/purchase": {
      "post": {
        "tags": [
          "Purchase"
        ],
        "summary": "Purchase-Delete",
        "description": "Delete a puchase object\nMethod : POST\n\nSample query response\n\n{\n  \"Purchase\": {\n    \"domain\": \"QBO\",\n    \"status\": \"Deleted\",\n    \"Id\": \"175\",\n    \"CustomField\": []\n  },\n  \"time\": \"2016-08-23T22:57:39.774-07:00\"\n}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "Id": "175",
                  "SyncToken": "1"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "operation",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "delete"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/purchase/175": {
      "get": {
        "tags": [
          "Purchase"
        ],
        "summary": "Purchase-ReadById",
        "description": "Read a puchase object by Id\nMethod : POST\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/purchaseorder": {
      "post": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "PurchaseOrder-Delete",
        "description": "Delete a puchaseorder object\nMethod : POST\n\nSample query response\n\n{\n  \"PurchaseOrder\": {\n    \"domain\": \"QBO\",\n    \"status\": \"Deleted\",\n    \"Id\": \"179\"\n  },\n  \"time\": \"2016-08-23T23:21:36.663-07:00\"\n}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "Id": "179",
                  "SyncToken": "1"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "operation",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "delete"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/purchaseorder/178": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "PurchaseOrder-ReadById",
        "description": "Read a puchase-order object\nMethod : POST\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/refundreceipt": {
      "post": {
        "tags": [
          "RefundReceipt"
        ],
        "summary": "RefundReceipt-Delete",
        "description": "Delete a refund-receipt object by Id\nMethod : POST\n\nSample response payload \n\n{\n  \"RefundReceipt\": {\n    \"domain\": \"QBO\",\n    \"status\": \"Deleted\",\n    \"Id\": \"180\"\n  },\n  \"time\": \"2016-08-23T23:42:38.153-07:00\"\n}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "Id": "180",
                  "SyncToken": "1"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "operation",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "delete"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/refundreceipt/66": {
      "get": {
        "tags": [
          "RefundReceipt"
        ],
        "summary": "RefundReceipt-ReadById",
        "description": "Read a refund-receipt object\nMethod : GET\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/AccountList": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-AccountList",
        "description": "Report - Account list detail\nMethod : GET\n\nThe information below provides a reference on how to access the account list detail report from the QuickBooks Online Report Service.\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/AgedPayableDetail": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-AgedPayableDetail",
        "description": "Report - AgedPayable aging detail\nMethod : GET\n\nThe information below provides a reference on how to access the AP Aging summary report from the QuickBooks Online Report Service.\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/AgedPayables": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-AgedPayables",
        "description": "Report - AgedPayable aging summary\nMethod : GET\n\nThe information below provides a reference on how to access the AP Aging summary report from the QuickBooks Online Report Service.\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/AgedReceivableDetail": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-AgedReceivableDetail",
        "description": "Report - AgedReceivableDetail aging detail\nMethod : GET\n\nThe information below provides a reference on how to access the AR Aging Detail report from the QuickBooks Online Report Service.\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/AgedReceivables": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-AgedReceivables",
        "description": "Report - AgedReceivable aging summary\nMethod : GET\n\nThe information below provides a reference on how to access the AR Aging Summary report from the QuickBooks Online Report Service.\n\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/BalanceSheet": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-BalanceSheet",
        "description": "Report - BalanceSheet\nMethod : GET\n\nThe information below provides a reference on how to query the Balance Sheet report from the QuickBooks Online Report Service.\n\n\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/CashFlow": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-CashFlow",
        "description": "Report - CashFlow\nMethod : GET\n\nThe information below provides a reference on how to access the cash flow report from the QuickBooks Online Report Service.\n\n\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/ClassSales": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-CashSales",
        "description": "Report - CashSales\nMethod : GET\n\n\n\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/CustomerBalance": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-CustomerBalance",
        "description": "Report - CustomerBalance\nMethod : GET\n\n\n\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/CustomerBalanceDetail": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-CustomerBalanceDetail",
        "description": "Report - CustomerBalance Detail\nMethod : GET\n\nThe information below provides a reference on how to access the Customer Balance Detail report from the QuickBooks Online Report Service.\n\n\n\n\n\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/CustomerIncome": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-CustomerIncome",
        "description": "Report - Customer Income\nMethod : GET\n\n\n\n\n\n\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/CustomerSales": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-CustomerSales",
        "description": "Report - Customer Sales\nMethod : GET\n\n\n\n\n\n\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/DepartmentSales": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-DepartmentSales",
        "description": "Report - Department Sales\nMethod : GET\n\n\n\n\n\n\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/GeneralLedger": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-GeneralLedger",
        "description": "Report - General Ledger\nMethod : GET\n\nDocs - https://developer.intuit.com/docs/api/accounting/general%20ledger\n\n\n\n\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/InventoryValuationSummary": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-InventoryValuationSummary",
        "description": "Report - Inventory Valuation Summary\nMethod : GET\n\nDocs - https://developer.intuit.com/docs/api/accounting/inventory%20valuation\n\n\n\n\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/ItemSales": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-ItemSales",
        "description": "Report - Item Sales\nMethod : GET\n\nDocs - https://developer.intuit.com/docs/api/accounting/sales%20by%20product\n\n\n\n\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/ProfitAndLoss": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-ProfitAndLoss",
        "description": "Report - Profit and Loss\nMethod : GET\n\nDocs - https://developer.intuit.com/docs/api/accounting/profit%20and%20loss\n\n\n\n\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/ProfitAndLossDetail": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-ProfitAndLossDetail",
        "description": "Report - Profit and Loss Detail\nMethod : GET\n\nDocs - https://developer.intuit.com/docs/api/accounting/profit%20and%20loss%20detail\n\n\n\n\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/TrialBalance": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-TrialBalance",
        "description": "Report - Trial Balance \nMethod : GET\n\nDocs - https://developer.intuit.com/docs/api/accounting/trial%20balance\n\n\n\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/TransactionList": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-TransactionList",
        "description": "Report - Trial List \nMethod : GET\n\nDocs - https://developer.intuit.com/docs/api/accounting/transaction%20list\n\n\n\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/VendorBalance": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-VendorBalance",
        "description": "Report - Vendor Balance \nMethod : GET\n\nDocs - https://developer.intuit.com/docs/api/accounting/vendor%20balance\n\n\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/VendorBalanceDetail": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-VendorBalanceDetail",
        "description": "Report - Vendor Balance Detail\nMethod : GET\n\nDocs - https://developer.intuit.com/docs/api/accounting/vendor%20balance%20detail\n\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/reports/VendorExpenses": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Report-VendorExpense",
        "description": "Report - Vendor Expense\nMethod : GET\n\nDocs - https://developer.intuit.com/docs/api/accounting/expenses%20by%20vendor\n\n\n\n\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/salesreceipt": {
      "post": {
        "tags": [
          "SalesReceipt"
        ],
        "summary": "SalesReceipt-Void",
        "description": "Void a salesreceipt object\nMethod : POST\n\nUse a sparse update operation with include=void to void an existing SalesReceipt object; include a minimum of SalesReceipt.Id and SalesReceipt.SyncToken. The transaction remains active but all amounts and quantities are zeroed and the string, Voided, is injected into SalesReceipt.PrivateNote, prepended to existing text if present. If a sales receipt is paid and funds have been deposited, you must delete the associated deposit object before voiding the salesreceipt object.\n\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "sparse": true,
                  "Id": "188",
                  "SyncToken": "0"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "void"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/salesreceipt/181": {
      "get": {
        "tags": [
          "SalesReceipt"
        ],
        "summary": "SalesReceipt-ReadByID",
        "description": "Create an salesreceipt object\nMethod : POST\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/taxagency": {
      "post": {
        "tags": [
          "TaxAgency"
        ],
        "summary": "TaxAgency-Create",
        "description": "Create a tax-agency object\nMethod : POST\n\nSample response payload\n\n{\n  \"SalesReceipt\": {\n    \"domain\": \"QBO\",\n    \"status\": \"Deleted\",\n    \"Id\": \"181\"\n  },\n  \"time\": \"2016-09-02T02:17:24.353-07:00\"\n}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "DisplayName": "CityTaxAgency"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/taxagency/3": {
      "get": {
        "tags": [
          "TaxAgency"
        ],
        "summary": "TaxAgency-ReadByID",
        "description": "Get a tax-agency object by ID\nMethod : GET\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/taxcode/2": {
      "get": {
        "tags": [
          "TaxCode"
        ],
        "summary": "TaxCode-ReadById",
        "description": "Read a taxcode by Id\nMethod : POST\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/text"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/taxrate/1": {
      "get": {
        "tags": [
          "TaxRate"
        ],
        "summary": "TaxRate-ReadById",
        "description": "Read a taxRate by Id\nMethod : POST\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/taxservice/taxcode": {
      "post": {
        "tags": [
          "TaxService"
        ],
        "summary": "TaxService-Create",
        "description": "Use TaxService to create taxcode and corresponding taxrates\nMethod : POST\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "TaxCode": "MyTaxCodeName",
                  "TaxRateDetails": [
                    {
                      "TaxRateName": "myNewTaxRateName",
                      "RateValue": "8",
                      "TaxAgencyId": "1",
                      "TaxApplicableOn": "Sales"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/term": {
      "post": {
        "tags": [
          "Term"
        ],
        "summary": "Term-Delete",
        "description": "Update a term object\nMethod : POST\n\nTerm object can't be deleted parmanently. It can only be deactived by setting the 'Active' attribute to false.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "Name": "Term1120-Updated",
                  "Active": false,
                  "Type": "STANDARD",
                  "DiscountPercent": 0,
                  "DueDays": 120,
                  "domain": "QBO",
                  "sparse": false,
                  "Id": "8",
                  "SyncToken": "1"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/term/8": {
      "get": {
        "tags": [
          "Term"
        ],
        "summary": "Term-ReadById",
        "description": "Read a term object by Id\nMethod : Get\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/timeactivity": {
      "post": {
        "tags": [
          "TimeActivity"
        ],
        "summary": "TimeActivity-Delete",
        "description": "Delete a time-activity object by Id\nMethod : POST\n\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "Id": "6",
                  "SyncToken": "1"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "operation",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "delete"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/transfer": {
      "post": {
        "tags": [
          "Transfer"
        ],
        "summary": "Transfer-Delete",
        "description": "Delete a transfer object\nMethod : POST\n\nSample response payload\n\n{\n  \"Transfer\": {\n    \"domain\": \"QBO\",\n    \"status\": \"Deleted\",\n    \"Id\": \"183\"\n  },\n  \"time\": \"2016-09-02T02:57:17.145-07:00\"\n}\n\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "Id": "183",
                  "SyncToken": "1"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "operation",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "delete"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/transfer/184": {
      "get": {
        "tags": [
          "Transfer"
        ],
        "summary": "Transfer-ReadById",
        "description": "Read a transfer object by Id\nMethod : GET\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/vendor": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Vendor-Delete",
        "description": "Delete a vendor object\nMethod : POST\n\nVendor objects can't be deleted permanently. It can only be deactivated by setting the 'Active' attribute to false",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "BillAddr": {
                    "Id": "111",
                    "Line1": "Dianne's Auto Shop",
                    "Line2": "Dianne Bradley",
                    "Line3": "29834 Mustang Ave.",
                    "City": "Millbrae",
                    "Country": "U.S.A",
                    "CountrySubDivisionCode": "CA",
                    "PostalCode": "94030"
                  },
                  "TaxIdentifier": "XXXXXX8293",
                  "Balance": 0,
                  "AcctNum": "35372649",
                  "Vendor1099": false,
                  "CurrencyRef": {
                    "value": "USD",
                    "name": "United States Dollar"
                  },
                  "domain": "QBO",
                  "sparse": false,
                  "Id": "70",
                  "SyncToken": "0",
                  "Title": "Ms.",
                  "GivenName": "Dianne",
                  "FamilyName": "Bradley",
                  "Suffix": "Sr.",
                  "CompanyName": "Dianne's Auto Shop",
                  "DisplayName": "Dianne's Auto Shop-Updated",
                  "PrintOnCheckName": "Dianne's Auto Shop",
                  "Active": false,
                  "PrimaryPhone": {
                    "FreeFormNumber": "(650) 555-2342"
                  },
                  "Mobile": {
                    "FreeFormNumber": "(650) 555-2000"
                  },
                  "PrimaryEmailAddr": {
                    "Address": "dbradley@myemail.com"
                  },
                  "WebAddr": {
                    "URI": "http://DiannesAutoShop.com"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/vendor/70": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Vendor-ReadById",
        "description": "Read a vendor object by Id\nMethod : GET\n\n",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/vendorcredit": {
      "post": {
        "tags": [
          "VendorCredit"
        ],
        "summary": "VendorCredit-Delete",
        "description": "Delete a vendorcredit object by Id\nMethod : POST\n\nSample response body \n\n{\n  \"VendorCredit\": {\n    \"domain\": \"QBO\",\n    \"status\": \"Deleted\",\n    \"Id\": \"185\"\n  },\n  \"time\": \"2016-09-02T03:14:13.909-07:00\"\n}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "Id": "185",
                  "SyncToken": "1"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "operation",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "delete"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/v3/company/{companyid}/vendorcredit/185": {
      "get": {
        "tags": [
          "VendorCredit"
        ],
        "summary": "VendorCredit-ReadById",
        "description": "Read a vendorcredit object by Id\nMethod : GET\n\nPlease change the VendorCredit it from 165 to a valid VendorCredit objectId which exists in your QBO account",
        "security": [
          {
            "oauth2Auth": []
          }
        ],
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "{{UserAgent}}"
          },
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "example": "application/json"
          },
          {
            "name": "minorversion",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "{{minorversion}}"
          },
          {
            "name": "companyid",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    }
  }
}
