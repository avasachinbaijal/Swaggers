openapi: 3.0.0
info:
  title: QuickBooks SB
  description: >-
    The QuickBooks Online Accounting API is a RESTful API that is used to access
    QuickBooks companies.


    Docs Ref - https://developer.intuit.com/docs/api/accounting
  version: 1.0.0
servers:
  - url: https://{{baseurl}}
components:
  securitySchemes:
    oauth2Auth:
      type: http
      scheme: oauth2
tags:
  - name: Account
    description: >-
      An Account object is a component of a Chart Of Accounts, and is part of a
      ledger. It is used to record a total monetary amount allocated against a
      specific use. Accounts are one of five basic types: asset, liability,
      revenue (income), expenses, or equity. Delete is achieved by setting the
      Active attribute to false in an object update request; thus, making it
      inactive. In this type of delete, the record is not permanently deleted,
      but is hidden for display purposes. References to inactive objects are
      left intact. 


      https://developer.intuit.com/docs/api/accounting/account
  - name: Attachable
    description: >
      https://developer.intuit.com/docs/api/accounting/attachable



      This page covers the Attachable, Upload, and Download resources used for
      attachment management. Attachments are supplemental information linked to
      a transaction or Item object. They can be files, notes, or a combination
      of both.


      In the case of file attachments, use an upload endpoint multipart request
      to upload the files to the QuickBooks attachment list and, optionally, to
      supply metadata for each via an attachable object. If meta data is not
      supplied with the upload request, the system creates it.

      In the case of a note, use the create attachable endpoint.

      For information about attachments, see the Attachments Developer Guide.
  - name: Batch
    description: >+
      https://developer.intuit.com/docs/api/accounting/batch


      The batch operation enables an application to perform multiple operations
      in a single request.  For example, in a single batch request an
      application can create a customer, update an invoice, and read an
      account.  Compared to multiple requests, a single batch request can
      improve an application's performance by decreasing network roundtrips and
      increasing throughput. The individual operations within a batch request
      are called BatchItemRequest objects.

  - name: Bill
    description: >+
      https://developer.intuit.com/docs/api/accounting/bill


      A Bill object is an AP transaction representing a request-for-payment from
      a third party for goods/services rendered and/or received.

  - name: BillPayment
    description: >-
      https://developer.intuit.com/docs/api/accounting/billpayment



      A BillPayment object represents the payment transaction for a bill that
      the business owner receives from a vendor for goods or services purchased
      from the vendor. QuickBooks Online supports bill payments through a credit
      card or a checking account. 

      BillPayment.TotalAmt is the total amount associated with this payment.
      This includes the total of all the payments from the payment line details.
      If TotalAmt is greater than the total on the lines being paid, the
      overpayment is treated as a credit and exposed as such on the QuickBooks
      UI. The total amount cannot be negative.
  - name: Budget
    description: >+
      https://developer.intuit.com/docs/api/accounting/budget


      The Budget endpoint allows you to retrieve the current state of budgets
      already set up in the user's company file. A budget allows for an amount
      to be assigned on a monthly, quarterly, or annual basis for a specific
      account or customer and are created to give a business measurable expense
      goals. This amount represents how much should be spent against that
      account or customer in the give time period.

  - name: ChangeDataCapture
    description: >-
      https://developer.intuit.com/docs/api/accounting/changedatacapture


      The change data capture (cdc) operation returns a list of objects that
      have changed since a specified time. This operation is for an app that
      periodically polls data services in order to refresh its local copy of
      object data. The app calls the cdc operation, specifying a comma separated
      list of object types and a date-time stamp specifying how far to look
      back. Data services returns all objects specified by entityList that have
      changed since the specified date-time. Look-back time can be up to 30
      days.
  - name: Class
    description: >-
      https://developer.intuit.com/docs/api/accounting/class


      Class objects provide a way to track different segments of the business so
      they're not tied to a particular client or project. For example, you can
      define classes to break down the income and expenses for each business
      segment. Classes are available to the entire transaction or to individual
      detail lines of a transaction.


      Ref -
      https://developer.intuit.com/docs/0100_quickbooks_online/0200_dev_guides/accounting/class_tracking
  - name: CompanyInfo
    description: >+
      https://developer.intuit.com/docs/api/accounting/companyinfo


      The CompanyInfo object contains basic company information. In QuickBooks,
      company info and preferences are displayed in the same place under
      preferences, so it may be confusing to figure out from user interface
      which fields may belong to this object. But in general, properties such as
      company addresses or name are considered company information. Some
      attributes may exist in both CompanyInfo and Preferences objects.

  - name: CreditMemo
    description: >+
      https://developer.intuit.com/docs/api/accounting/creditmemo


      The CreditMemo object is a financial transaction representing a refund or
      credit of payment or part of a payment for goods or services that have
      been sold.

  - name: Customer
    description: >+
      https://developer.intuit.com/docs/api/accounting/customer


      A customer is a consumer of the service or product that your business
      offers. The Customer object allows you to categorize customers according
      to your business requirements. To create a job, you must first create a
      customer and then create a job referencing that customer as a parent with
      the ParentRef attribute. Some areas a sub-customer/job can be used
      include:


      To track a job for the top-level customer, such as a kitchen remodel or
      bathroom remodel.

      Members of a team or league.

      Properties managed by a Homeowner Association or Property Management
      Company.

      See QuickBooks product documentation for more about sub-customers and
      jobs.

  - name: Department
    description: >-
      https://developer.intuit.com/docs/api/accounting/department


      The Department resource provides a way to track transactions based on
      physical locations such as stores, sales regions, or countries. As you
      create sales and expense transactions, consistently designate the
      department to which they belong. 
  - name: Deposit
    description: >
      https://developer.intuit.com/docs/api/accounting/deposit



      A deposit object is a transaction that records one or more deposits of the
      following types:


      A customer payment, originally held in the Undeposited Funds account, into
      the Asset Account specified by the Deposit.DepositToAccountRef attribute.
      The Deposit.line.LinkedTxn element is used in this case to hold deposit
      information.

      A new, direct deposit specified by Deposit.Line.DepositLineDetail line
      detail.
  - name: Employee
    description: >-
      https://developer.intuit.com/docs/api/accounting/employee


      An Employee object represents a person working for the company.


      The DisplayName attribute must be unique.

      The GivenName, MiddleName, FamilyName, and PrintOnCheckName attributes
      must not contain a colon (:).

      The GivenName and FamilyName attributes are required.

      The PrimaryEmailAddress attribute must contain an at sign (@) and dot (.).

      The full complement of read, create, delete via deactivation
      (active=false), and update operations are available both with and without
      QuickBooks Payroll enabled. However, when Payroll is enabled, support for
      some attributes is limited:

      Title—Not supported when QuickBooks Payroll is enabled.

      Suffix—Not supported when QuickBooks Payroll is enabled.

      DisplayName —It’s read only when QuickBooks Payroll is enabled and a
      concatenation of GivenName MiddleName FamilyName.

      PrintOnCheckName—Not supported when QuickBooks Payroll is enabled.

      BillRate—Not supported when QuickBooks Payroll is enabled.

      SSN—Masked SSNs, as is returned in a response, cannot be passed in a
      request when QuickBooks Payroll is enabled. Code for this field must be
      removed before submitting.
  - name: Estimate
    description: >+
      https://developer.intuit.com/docs/api/accounting/estimate


      Estimate represents a proposal for a financial transaction from a business
      to a customer for goods or services proposed to be sold, including
      proposed pricing.

  - name: ExchangeRate
    description: >+
      https://developer.intuit.com/docs/api/accounting/exchangerate


      Applicable only for those companies that enable multicurrency, the
      exchangerate resource provides the ability to query and set exchange rates
      available to the QuickBooks Online company. This entity works in
      combination with the companycurrency entity and the Currency Center in the
      QuickBooks Online UI to manage exchange rates for the company.


  - name: Invoice
    description: >+
      https://developer.intuit.com/docs/api/accounting/invoice


      An Invoice represents a sales form where the customer pays for a product
      or service later.

  - name: Item
    description: >-
      https://developer.intuit.com/docs/api/accounting/item


      An item is a thing that your company buys, sells, or re-sells, such as
      products and services. An item is shown as a line on an invoice or other
      sales form. 
  - name: JournalEntry
    description: >-
      https://developer.intuit.com/docs/api/accounting/journalentry


      JournalEntry is a transaction in which:


      There are at least one pair of lines, a debit and a credit, called
      distribution lines.

      Each distribution line has an account from the Chart of Accounts. Query
      the Account resource for a listing of the Chart of Accounts.

      The total of the debit column equals the total of the credit column.

      When you record a transaction with a JournalEntry object, the QuickBooks
      Online UI labels the transaction as JRNL in the register and as General
      Journal on reports that list transactions.
  - name: Payment
    description: >-
      https://developer.intuit.com/docs/api/accounting/payment


      A Payment object records a payment in QuickBooks. The payment can be
      applied for a particular customer against multiple Invoices and Credit
      Memos. It can also be created without any Invoice or Credit Memo, by just
      specifying an amount. 
  - name: PaymentMethod
    description: >-
      https://developer.intuit.com/docs/api/accounting/paymentmethod


      The PaymentMethod resource provides the method of payment for received
      goods. 
  - name: Preferences
    description: >+
      https://developer.intuit.com/docs/api/accounting/preferences


      The Preferences resource represents a set of company preferences that
      control application behavior in QuickBooks Online. They are mostly exposed
      as read-only through the Preferences endpoint with only a very small
      subset of them available as writable. Preferences are not necessarily
      honored when making requests via the QuickBooks API because a lot of them
      control UI behavior in the application and may not be applicable for apps.


      Business Rules


      The create operation is not supported.

      The read request retrieves all preferences. There is no notion of
      preference objects or object IDs.

      Update operations are supported for a limited subset of preferences.

      The Delete operation is not supported.

      Query is supported with sorting and filtering enabled for Metadata
      timestamp attributes. Pagination is not supported.

      OtherPrefs type is used as an extension mechanism to contain additional
      attributes as Name/Value pairs.

  - name: Purchase
    description: >-
      https://developer.intuit.com/docs/api/accounting/purchase


      A Purchase object represents an expense, such as a purchase made from a
      vendor. There are three types of purchases: Cash, Check, and Credit Card.


      Cash Purchase contains information regarding a payment made in cash.

      Check Purchase contains information regarding a payment made by check.

      Credit Card Purchase contains information regarding a payment made by
      credit card or refunded/credited back to a credit card.
  - name: PurchaseOrder
    description: >+
      https://developer.intuit.com/docs/api/accounting/purchaseorder


      The PurchaseOrder object is a non-posting transaction representing a
      request to purchase goods or services from a third party.

  - name: RefundReceipt
    description: >+
      https://developer.intuit.com/docs/api/accounting/refundreceipt


      A RefundReceipt object represents a refund to the customer for a product
      or service that was provided.

  - name: Reports
  - name: SalesReceipt
    description: >-
      https://developer.intuit.com/docs/api/accounting/salesreceipt


      A SalesReceipt object represents the sales receipt that is given to a
      customer. A sales receipt is similar to an invoice. However, for a sales
      receipt, payment is received as part of the sale of goods and services.
      The sales receipt specifies a deposit account where the customer's payment
      is deposited. If the deposit account is not specified, the Undeposited
      Account is used.
  - name: TaxAgency
    description: >+
      https://developer.intuit.com/docs/api/accounting/taxagency


      A TaxAgency object is associated with a tax rate and identifies the agency
      to which that tax rate applies, that is, the entity that collects those
      taxes.

  - name: TaxCode
    description: >-
      https://developer.intuit.com/docs/api/accounting/taxcode


      A TaxCode object is used to track the taxable or non-taxable status of
      products, services, and customers. You can assign a sales tax code to each
      of your products, services, and customers based on their taxable or
      non-taxable status. You can then use these codes to generate reports that
      provide information to the tax agencies about the taxable or non-taxable
      status of certain sales.
  - name: TaxRate
    description: >+
      https://developer.intuit.com/docs/api/accounting/taxrate


      A TaxRate object represents rate applied to calculate tax liability. Use
      the TaxService entity to create a taxrate. See Global tax model for more
      information about using TaxRate objects and the tax model in general.

  - name: TaxService
    description: >
      https://developer.intuit.com/docs/api/accounting/taxservice


      The TaxService resource allows you to perform the following actions:


      Create a new TaxCode object and specify a list of existing tax rates to be
      associated to that tax code. To retrieve a list of existing TaxCode
      objects, query the TaxCode resource.

      Create a new TaxRate object, dynamically. To retrieve a list of existing
      tax rates, query the TaxRate resource.
  - name: Term
    description: >
      https://developer.intuit.com/docs/api/accounting/term


      A Term object represents the terms under which a sale is made, typically
      expressed in the form of days due after the goods are received.
      Optionally, a discount of the total amount may be applied if payment is
      made within a stipulated time. For example, net 30 indicates that payment
      is due within 30 days. A term of 2%/15 net 60 indicates that payment is
      due within 60 days, with a discount of 2% if payment is made within 15
      days. This resource also supports:


      An absolute due date.

      A number of days from a start date.

      A percent discount.

      An absolute discount.
  - name: TimeActivity
    description: >+
      https://developer.intuit.com/docs/api/accounting/timeactivity


      The TimeActivity object represents a record of time worked by a vendor or
      employee.

  - name: Transfer
    description: >+
      https://developer.intuit.com/docs/api/accounting/transfer


      A Transfer represents a transaction where funds are moved between two
      accounts from the company's QuickBooks chart of accounts.

  - name: Vendor
    description: >+
      https://developer.intuit.com/docs/api/accounting/vendor


      The Vendor object represents the seller from whom your company purchases
      any service or product.

  - name: VendorCredit
    description: >+
      https://developer.intuit.com/docs/api/accounting/vendorcredit



      The VendorCredit object is an accounts payable transaction that represents
      a refund or credit of payment for goods or services. It is a credit that a
      vendor owes you for various reasons such as overpaid bill, returned
      merchandise, or other reasons.

paths:
  /v3/company/{companyid}/account:
    post:
      tags:
        - Account
      summary: Account-Update
      description: Update an account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Name: AR3-Updated111
                SubAccount: false
                FullyQualifiedName: AR3-Updated
                Active: true
                Classification: Asset
                AccountType: Accounts Receivable
                AccountSubType: AccountsReceivable
                CurrentBalance: 0
                CurrentBalanceWithSubAccounts: 0
                CurrencyRef:
                  value: USD
                  name: United States Dollar
                domain: QBO
                sparse: false
                Id: '94'
                SyncToken: '3'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/account/1:
    get:
      tags:
        - Account
      summary: Account-ReadById
      description: Get the Account which has accountId as 1
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/query:
    post:
      tags:
        - VendorCredit
      summary: VendorCredit-ReadAll
      description: |
        Read all vendorcredit objects using the 'Query' endpoint
        Method : POST
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: select * from vendorcredit startposition 1 maxresults 5
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/text
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/attachable:
    post:
      tags:
        - Attachable
      summary: Attachable-Delete
      description: |-
        Delete an attachable object by Id
        Accept:application/json
        Method - POST
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Note: This is an attached note. Updated1
                domain: QBO
                sparse: false
                Id: '5000000000000029383'
                SyncToken: '2'
                MetaData:
                  CreateTime: '2016-08-18T00:18:04-07:00'
                  LastUpdatedTime: '2016-08-18T00:18:04-07:00'
                AttachableRef:
                  - EntityRef:
                      value: '130'
                      type: Invoice
                    IncludeOnSend: false
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: operation
          in: query
          schema:
            type: string
          example: delete
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/attachable/5000000000000029383:
    get:
      tags:
        - Attachable
      summary: Attachable-ReadById
      description: |-
        Retrieve an attachable object by Id
        Accept:application/json
        Method - GET
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/upload:
    post:
      tags:
        - Attachable
      summary: Upload-Attachments
      description: >-
        Uploading and linking new attachments


        https://developer.intuit.com/docs/0100_quickbooks_online/0200_dev_guides/accounting/attachments#Uploading_and_linking_new_attachments


        If the attachment is not in the Attachment list already, it's possible
        to upload it and link it to the object in one multipart operation.


        Operation:      POST
        https://quickbooks.api.intuit.com/v3/company/companyID/upload

        Content type: multipart/form-data


        Request body


        The following sample code shows the multipart request body for uploading
        a file and its supporting Attachable metatdata object, with the result
        of it being both added to the Attachment list and added to the object.


        The Attachable object accompanying this request supplies metadata and
        object information to which the attachment is linked. 

        Each part of the multipart request is separated by a boundary.  In the
        sample below, the string  --YOjcLaTlykb6OxfYJx4O07j1MweeMFem is used. 
        You can use any random and unique string.

        The file to be uploaded and its Attachable object are paired together
        via the name parameter in the part header for each one.

        The name parameter for the file part is of the form file_content_nn,
        where nn is a unique index number among the set of files being uploaded.

        The name parameter for the Attachable object is of the form
        file_metadata_nn, where nn corresponds to the file index number used
        with the content .

        The file or files are stored in the Attachment list with the name
        specified by the filename parameter.

        If the data supplied with the Attachable object cannot be validated, an
        error is returned and the file is not uploaded.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: >-
                --37a1965f87babd849241a530ad71e169

                Content-Disposition: form-data; name="file_metadata_0"

                Content-Type: application/json; charset=UTF-8

                Content-Transfer-Encoding: 8bit


                {
                    "AttachableRef": [
                    {
                      "EntityRef": {
                        "type": "Invoice",
                        "value": "173"
                      }
                    }
                  ],
                   "FileName": "receipt_nov15.jpg",
                    "ContentType": "image/jpg"
                  }
                --37a1965f87babd849241a530ad71e169

                Content-Disposition: form-data; name="file_content_0";
                filename="398535758.jpg"

                Content-Type: image/jpeg

                Content-Transfer-Encoding: base64


                /9j/4AAQSkZJRgABAQEAlgCWAAD/4ge4SUNDX1BST0ZJTEUAAQEAAAeoYXBwbAIgAABtbnRyUkdC

                IFhZWiAH2QACABkACwAaAAthY3NwQVBQTAAAAABhcHBsAAAAAAAAAAAAAAAAAAAAAAAA9tYAAQAA

                AADTLWFwcGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtk

                ZXNjAAABCAAAAG9kc2NtAAABeAAABWxjcHJ0AAAG5AAAADh3dHB0AAAHHAAAABRyWFlaAAAHMAAA

                ABRnWFlaAAAHRAAAABRiWFlaAAAHWAAAABRyVFJDAAAHbAAAAA5jaGFkAAAHfAAAACxiVFJDAAAH

                bAAAAA5nVFJDAAAHbAAAAA5kZXNjAAAAAAAAABRHZW5lcmljIFJHQiBQcm9maWxlAAAAAAAAAAAA

                AAAUR2VuZXJpYyBSR0IgUHJvZmlsZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

                AAAAAAAAAAAAAAAAAAAAbWx1YwAAAAAAAAAeAAAADHNrU0sAAAAoAAABeGhySFIAAAAoAAABoGNh

                RVMAAAAkAAAByHB0QlIAAAAmAAAB7HVrVUEAAAAqAAACEmZyRlUAAAAoAAACPHpoVFcAAAAWAAAC

                ZGl0SVQAAAAoAAACem5iTk8AAAAmAAAComtvS1IAAAAWAAACyGNzQ1oAAAAiAAAC3mhlSUwAAAAe

                AAADAGRlREUAAAAsAAADHmh1SFUAAAAoAAADSnN2U0UAAAAmAAAConpoQ04AAAAWAAADcmphSlAA

                AAAaAAADiHJvUk8AAAAkAAADomVsR1IAAAAiAAADxnB0UE8AAAAmAAAD6G5sTkwAAAAoAAAEDmVz

                RVMAAAAmAAAD6HRoVEgAAAAkAAAENnRyVFIAAAAiAAAEWmZpRkkAAAAoAAAEfHBsUEwAAAAsAAAE

                pHJ1UlUAAAAiAAAE0GFyRUcAAAAmAAAE8mVuVVMAAAAmAAAFGGRhREsAAAAuAAAFPgBWAWEAZQBv

                AGIAZQBjAG4A/QAgAFIARwBCACAAcAByAG8AZgBpAGwARwBlAG4AZQByAGkBDQBrAGkAIABSAEcA

                QgAgAHAAcgBvAGYAaQBsAFAAZQByAGYAaQBsACAAUgBHAEIAIABnAGUAbgDoAHIAaQBjAFAAZQBy

                AGYAaQBsACAAUgBHAEIAIABHAGUAbgDpAHIAaQBjAG8EFwQwBDMEMAQ7BEwEPQQ4BDkAIAQ/BEAE

                PgREBDAEOQQ7ACAAUgBHAEIAUAByAG8AZgBpAGwAIABnAOkAbgDpAHIAaQBxAHUAZQAgAFIAVgBC

                kBp1KAAgAFIARwBCACCCcl9pY8+P8ABQAHIAbwBmAGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIA

                aQBjAG8ARwBlAG4AZQByAGkAcwBrACAAUgBHAEIALQBwAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg

                1QS4XNMMx3wATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAA

                UgBHAEIAIAXbBdwF3AXZAEEAbABsAGcAZQBtAGUAaQBuAGUAcwAgAFIARwBCAC0AUAByAG8AZgBp

                AGwAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYAaQBsZm6QGgAgAFIARwBCACBj

                z4/wZYdO9k4AgiwAIABSAEcAQgAgMNcw7TDVMKEwpDDrAFAAcgBvAGYAaQBsACAAUgBHAEIAIABn

                AGUAbgBlAHIAaQBjA5MDtQO9A7kDugPMACADwAPBA78DxgOvA7sAIABSAEcAQgBQAGUAcgBmAGkA

                bAAgAFIARwBCACAAZwBlAG4A6QByAGkAYwBvAEEAbABnAGUAbQBlAGUAbgAgAFIARwBCAC0AcABy

                AG8AZgBpAGUAbA5CDhsOIw5EDh8OJQ5MACAAUgBHAEIAIA4XDjEOSA4nDkQOGwBHAGUAbgBlAGwA

                IABSAEcAQgAgAFAAcgBvAGYAaQBsAGkAWQBsAGUAaQBuAGUAbgAgAFIARwBCAC0AcAByAG8AZgBp

                AGkAbABpAFUAbgBpAHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE

                OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZBACAAUgBHAEIAIAYn

                BkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAAUAByAG8AZgBpAGwAZQBHAGUAbgBlAHIA

                ZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGV0ZXh0AAAAAENvcHlyaWdodCAyMDA3

                IEFwcGxlIEluYy4sIGFsbCByaWdodHMgcmVzZXJ2ZWQuAFhZWiAAAAAAAADzUgABAAAAARbPWFla

                IAAAAAAAAHRNAAA97gAAA9BYWVogAAAAAAAAWnUAAKxzAAAXNFhZWiAAAAAAAAAoGgAAFZ8AALg2

                Y3VydgAAAAAAAAABAc0AAHNmMzIAAAAAAAEMQgAABd7///MmAAAHkgAA/ZH///ui///9owAAA9wA

                AMBs/+EAgEV4aWYAAE1NACoAAAAIAAUBEgADAAAAAQABAAABGgAFAAAAAQAAAEoBGwAFAAAAAQAA

                AFIBKAADAAAAAQACAACHaQAEAAAAAQAAAFoAAAAAAAA6mQAAAGQAADqZAAAAZAACoAIABAAAAAEA

                AAAuoAMABAAAAAEAAAAUAAAAAP/bAEMAAgEBAgEBAgIBAgICAgIDBQMDAwMDBgQEAwUHBgcHBwYG

                BgcICwkHCAoIBgYJDQkKCwsMDAwHCQ0ODQwOCwwMC//bAEMBAgICAwIDBQMDBQsIBggLCwsLCwsL

                CwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLC//AABEIABQALgMBIgAC

                EQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAA

                AX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4

                OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaan

                qKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQAD

                AQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEG

                EkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpT

                VFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4

                ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/APkb41eO

                NYtfi94oSDVdRVF1a74FzJgfvn96j+Kmj+O/gj/wj3/C159Q0MeK9Et/EekmfU1IvdPuN/kzrtkO

                0N5b/K2GGOQKzvjnz8YPFX/YVvP/AEc9fePiv9qXwn4K+Eut674A8S+Br3xl4e/Zd8MaZ4dF0LPU

                HtvENte3TtbwwThla8h3RuYipI+UspFfueIryw6p8kOa+n5Ja62310Z+V4XDRxU5RlPl8z4O0S/8

                YeJfB+t+IfD1xrN7oPhpbZtV1GG7ZrXTxczeRb+bJvwDLLlEAyWYHA4OK/hTxP4i8ceKdI0Xwrq9

                1eanr13FY6fANS2fappZFjRVdnCgF2UFiQozkkDmv0r+KX7VPhO/8JftJaX8I/HPwu0qXxf4c8C+

                JZIA1hDb63cpldfjtwI2WS7NvFGnkINyyMpXY7Fqq/GDUvhB4d+IXxP17TPHvwc1nTfiB8a/h/4o

                0O10zVbW4lstChubNbxpoto+zxARztLHyAgZnADc8NPN5ydpUbXtbfqob6dOZ9vha8zu/smElpXX

                W+3eW2vku+5+fXjvw38RPhlZm58eRa7ptp/a97oCXT3m+3nv7Jtt3BDKkhWUwtwzISgPG4mux/ZD

                8Y6tefEO++06nqL7dOkxm6k4/exf7VfRX/BRD9oTTfiz+xBaaD8NPGfgK803wz8XvFf2nRLOWzjv

                30+XU5pNKntIUQSPbeU+8yxkKUK7i+AB8x/sc/8AJQ7/AP7Bz/8Ao2KuqlWnicLOdSKTu1b0em/d

                anFVpRw+IjCnK60d/X0O/wDil+zfoWofE7xJNcXOqb31W7JxJHj/AF7/APTOsH/hmPw//wA/Gqf9

                /I//AI3RRXRTk+VamM4rmegv/DMfh/H/AB8ap/38j/8AjdB/Zj8Pn/l41Trn/WR9f+/dFFVzPuRZ

                XEP7Mfh89bjVOP8AppFx/wCQ69I/Zf8A2d9F0z4hXP2S61Qb9Olzl4z0lh/6Z+9FFY4mT9lLU1oJ

                c6P/2Q==


                --37a1965f87babd849241a530ad71e169--
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data;boundary=37a1965f87babd849241a530ad71e169
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/batch:
    post:
      tags:
        - Batch
      summary: Batch
      description: |-
        Multiple operations using batch query
        Content-Type:application/json
        Method - POST
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                BatchItemRequest:
                  - bId: bid1
                    operation: create
                    Vendor:
                      DisplayName: Smith Family Store
                  - bId: bid2
                    operation: delete
                    Invoice:
                      Id: '129'
                      SyncToken: '0'
                  - bId: bid3
                    operation: update
                    SalesReceipt:
                      domain: QBO
                      sparse: true
                      Id: '11'
                      SyncToken: '0'
                      PrivateNote: A private note.
                  - bId: bid4
                    Query: select * from SalesReceipt
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/bill:
    post:
      tags:
        - Bill
      summary: Bill-Delete
      description: |-
        Update a bill
        Content-Type:application/json
        Method - POST

        Sample Request

        {
            "Id": "149",
            "SyncToken": "0"
        }

        Sample Response - 

        {
          "Bill": {
            "domain": "QBO",
            "status": "Deleted",
            "Id": "149"
          },
          "time": "2016-08-18T10:02:41.570-07:00"
        }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Id: '149'
                SyncToken: '0'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: operation
          in: query
          schema:
            type: string
          example: delete
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/bill/1:
    get:
      tags:
        - Bill
      summary: Bill-GetById
      description: |-
        Retrieve a bill by Id
        Accept:application/json
        Method - GET
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/billpayment:
    post:
      tags:
        - BillPayment
      summary: BillPayment-Update
      description: |-
        Update a BillPayment
        Content-Type:application/json
        Method - POST
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                VendorRef:
                  value: '62'
                  name: Test
                PayType: Check
                CheckPayment:
                  BankAccountRef:
                    value: '35'
                    name: Checking
                TotalAmt: 100
                PrivateNote: Updated Note
                Line:
                  - Amount: 100
                    LinkedTxn:
                      - TxnId: '153'
                        TxnType: Bill
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/billpayment/118:
    get:
      tags:
        - BillPayment
      summary: BillPayment-ReadById
      description: |-
        Retrieve BillPayment by Id
        Method - GET
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/cdc:
    get:
      tags:
        - ChangeDataCapture
      summary: CDC-Read
      description: |-
        Retrive changed Bill and invoice objects since Aug10,2016
        Method - GET
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/text
        - name: entities
          in: query
          schema:
            type: string
          example: bill,invoice
        - name: changedSince
          in: query
          schema:
            type: string
          example: YYYY-MM-DD
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/class:
    post:
      tags:
        - Class
      summary: Class-Delete
      description: |-
        Delete a Class entry
        Method - POST

        Sample request payload 

        {
            "Id": "5000000000000018727",
            "SyncToken": "1"
        }

        Sample response payload

        {
          "time": "2016-08-18T11:53:27.601-07:00"
        }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Id: '5000000000000018727'
                SyncToken: '1'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: operation
          in: query
          schema:
            type: string
          example: delete
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/class/5000000000000018727:
    get:
      tags:
        - Class
      summary: Class-ReadById
      description: |-
        Read a Class object by Id
        Method - GET
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/companyinfo/{companyid}:
    get:
      tags:
        - CompanyInfo
      summary: CompanyInfo-ReadById
      description: 'Method : GET'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/creditmemo:
    post:
      tags:
        - CreditMemo
      summary: CreditMemo-Delete
      description: |-
        Delete a credit memo by Id
        Method : GET

        Sample request payload 

        {
            "Id": "160",
            "SyncToken": "2"
        }

        Sample response payload 

        {
          "CreditMemo": {
            "domain": "QBO",
            "status": "Deleted",
            "Id": "160"
          },
          "time": "2016-08-18T13:16:22.310-07:00"
        }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Id: '160'
                SyncToken: '2'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: operation
          in: query
          schema:
            type: string
          example: delete
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/creditmemo/160:
    get:
      tags:
        - CreditMemo
      summary: CreditMemo-ReadById
      description: |-
        Read a credit memo by Id
        Method : GET
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/customer:
    post:
      tags:
        - Customer
      summary: Customer-Delete
      description: >-
        Delete a customer by Id

        Method : POST


        Customer(or any Name List entities) can't be deleted permanently. It can
        only be inactived by setting the value of 'Active' attribute to false.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                domain: QBO
                sparse: true
                Id: '67'
                SyncToken: '0'
                Active: false
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/customer/63:
    get:
      tags:
        - Customer
      summary: Customer-ReadById
      description: |-
        Read a customer entry by Id
        Method : GET
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/department:
    post:
      tags:
        - Department
      summary: Department-Delete
      description: >+
        Delete a department object

        Method : POST


        Delete is achieved by setting the Active attribute to false in an entity
        update request; thus, making it inactive. In this type of delete, the
        record is not permanently deleted, but is hidden for display purposes.
        References to inactive objects are left intact.

      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Name: Marketing Department-Updated
                SubDepartment: false
                FullyQualifiedName: Marketing Department
                Active: false
                domain: QBO
                sparse: false
                Id: '1'
                SyncToken: '2'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/department/1:
    get:
      tags:
        - Department
      summary: Department-ReadById
      description: |-
        Read a department object
        Method : GET
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/deposit:
    post:
      tags:
        - Deposit
      summary: Deposit-Delete
      description: |-
        Delete a deposit object by Id
        Method : POST

        Sample request payload 

        {
            "Id": "162",
            "SyncToken": "1"
        }

        Sample response payload

        {
          "Deposit": {
            "domain": "QBO",
            "status": "Deleted",
            "Id": "162"
          },
          "time": "2016-08-18T16:01:36.997-07:00"
        }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Id: '162'
                SyncToken: '1'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: operation
          in: query
          schema:
            type: string
          example: delete
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/deposit/162:
    get:
      tags:
        - Deposit
      summary: Deposit-ReadById
      description: |-
        Read a deposit object by Id
        Method : POST
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/employee:
    post:
      tags:
        - Employee
      summary: Employee-Delete
      description: |+
        Delete an employee object
        Method : POST

        Delete via deactivation (active=false)

      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                SSN: XXX-XX-XXXX
                PrimaryAddr:
                  Id: '105'
                  Line1: 45 N. Elm Street
                  City: Middlefield
                  CountrySubDivisionCode: CA
                  PostalCode: '93242'
                BillableTime: false
                domain: QBO
                sparse: false
                Id: '68'
                SyncToken: '2'
                MetaData:
                  CreateTime: '2016-08-18T16:04:16-07:00'
                  LastUpdatedTime: '2016-08-18T16:04:16-07:00'
                GivenName: John
                FamilyName: Meuller
                DisplayName: John Meuller - Updated
                PrintOnCheckName: John Meuller
                Active: false
                PrimaryPhone:
                  FreeFormNumber: 408-525-1234
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/employee/68:
    get:
      tags:
        - Employee
      summary: Employee-ReadById
      description: |+
        Retrive an employee object by ID
        Method : GET

      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/estimate:
    post:
      tags:
        - Estimate
      summary: Estimate-Delete
      description: |
        Delete an Estimate object by Id
        Method : POST

        Sample request sample 

        {
            "Id": "163",
            "SyncToken": "1"
        }

        Sample response sample 

        {
          "Estimate": {
            "domain": "QBO",
            "status": "Deleted",
            "Id": "163"
          },
          "time": "2016-08-18T16:26:18.345-07:00"
        }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Id: '163'
                SyncToken: '1'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: operation
          in: query
          schema:
            type: string
          example: delete
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/estimate/163:
    get:
      tags:
        - Estimate
      summary: Estimate-ReadById
      description: |
        Read an Estimate object by Id
        Method : POST
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/exchangerate:
    get:
      tags:
        - ExchangeRate
      summary: ExchangeRate - GetDetails
      description: |
        Get ExchangeRate
        Method : GET
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: sourcecurrencycode
          in: query
          schema:
            type: string
          example: USD
        - name: asofdate
          in: query
          schema:
            type: string
          example: '2017-04-25'
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/invoice:
    post:
      tags:
        - Invoice
      summary: Invoice-Void
      description: |+
        Void an invoice object by Id
        Method : POST

      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Id: '173'
                SyncToken: '2'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: operation
          in: query
          schema:
            type: string
          example: void
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/invoice/147:
    get:
      tags:
        - Invoice
      summary: Invoice-ReadById
      description: |
        Read an invoice object by Id
        Method : POST
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/item:
    post:
      tags:
        - Item
      summary: Item-Delete
      description: |-
        Delete an item object
        Method : POST

        Item object can't be deleted permanently. It can only be dactivated. 

        Delete endpoint returns full item details.

        Sample response payload 

        {
          "Item": {
            "Name": "Garden Supplies-Updated (deleted)",
            "Active": false,
            "FullyQualifiedName": "Garden Supplies-Updated (deleted)",
            "Taxable": false,
            "UnitPrice": 0,
            "Type": "Inventory",
            "IncomeAccountRef": {
              "value": "79",
              "name": "Sales of Product Income"
            },
            "PurchaseCost": 0,
            "ExpenseAccountRef": {
              "value": "80",
              "name": "Cost of Goods Sold"
            },
            "AssetAccountRef": {
              "value": "81",
              "name": "Inventory Asset"
            },
            "TrackQtyOnHand": true,
            "QtyOnHand": 0,
            "InvStartDate": "2015-01-01",
            "domain": "QBO",
            "sparse": false,
            "Id": "20",
            "SyncToken": "2",
            "MetaData": {
              "CreateTime": "2016-08-18T20:05:48-07:00",
              "LastUpdatedTime": "2016-08-18T20:09:43-07:00"
            }
          },
          "time": "2016-08-18T20:09:43.174-07:00"
        }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Name: Garden Supplies-Updated
                Active: false
                FullyQualifiedName: Garden Supplies-Updated
                Taxable: false
                UnitPrice: 0
                Type: Inventory
                IncomeAccountRef:
                  value: '79'
                  name: Sales of Product Income
                PurchaseCost: 0
                ExpenseAccountRef:
                  value: '80'
                  name: Cost of Goods Sold
                AssetAccountRef:
                  value: '81'
                  name: Inventory Asset
                TrackQtyOnHand: true
                QtyOnHand: 10
                InvStartDate: '2015-01-01'
                domain: QBO
                sparse: false
                Id: '20'
                SyncToken: '0'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/item/<ID>:
    get:
      tags:
        - Item
      summary: Item-ReadById
      description: |
        Read an Item by Id
        Method : GET
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/journalentry:
    post:
      tags:
        - JournalEntry
      summary: JournalEntry-Delete
      description: |-
        Delete an journalentry object
        Method : POST

        Sample request payload 

        {
            "Id": "167",
            "SyncToken": "0"
        }

        Sample response payload 

        {
          "JournalEntry": {
            "domain": "QBO",
            "status": "Deleted",
            "Id": "167"
          },
          "time": "2016-08-18T20:16:26.585-07:00"
        }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Id: '167'
                SyncToken: '0'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: operation
          in: query
          schema:
            type: string
          example: delete
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/journalentry/8:
    get:
      tags:
        - JournalEntry
      summary: JournalEntry-ReadById
      description: |
        Read an journalentry object by Id
        Method : POST
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/payment:
    post:
      tags:
        - Payment
      summary: Payment-Delete
      description: |-
        Delete a payment object
        Method : POST

        Sample response payload

        {
          "Payment": {
            "domain": "QBO",
            "status": "Deleted",
            "Id": "174"
          },
          "time": "2016-08-23T20:06:18.696-07:00"
        }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Id: '174'
                SyncToken: '1'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: operation
          in: query
          schema:
            type: string
          example: delete
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/payment/174:
    get:
      tags:
        - Payment
      summary: Payment-ReadByID
      description: |
        Read a payment object by Id
        Method : GET
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/paymentmethod:
    post:
      tags:
        - PaymentMethod
      summary: PaymentMethod-Delete
      description: >-
        Delete a payment method

        Method : GET


        Delete is achieved by setting the Active attribute to false in an object
        update request; thus, making it inactive. In this type of delete, the
        record is not permanently deleted, but is hidden for display purposes.
        References to inactive objects are left intact.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Name: Business Check-Updated
                Active: false
                Type: NON_CREDIT_CARD
                domain: QBO
                sparse: false
                Id: '8'
                SyncToken: '0'
                MetaData:
                  CreateTime: '2016-08-23T20:09:50-07:00'
                  LastUpdatedTime: '2016-08-23T20:09:50-07:00'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/paymentmethod/8:
    get:
      tags:
        - PaymentMethod
      summary: PaymentMethod-ReadById
      description: |
        Read a payment method
        Method : GET
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/preferences:
    get:
      tags:
        - Preferences
      summary: Preference-Read
      description: |
        Read the preference object
        Method : POST
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Preferences
      summary: Preference-Update
      description: |
        Update the preference object endpoint
        Method : POST
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                AccountingInfoPrefs:
                  TrackDepartments: true
                  DepartmentTerminology: Location
                  ClassTrackingPerTxn: false
                  ClassTrackingPerTxnLine: true
                  CustomerTerminology: Customers
                ProductAndServicesPrefs:
                  ForSales: true
                  ForPurchase: true
                  QuantityWithPriceAndRate: true
                  QuantityOnHand: true
                SalesFormsPrefs:
                  CustomField:
                    - CustomField:
                        - Name: SalesFormsPrefs.UseSalesCustom3
                          Type: BooleanType
                          BooleanValue: false
                        - Name: SalesFormsPrefs.UseSalesCustom2
                          Type: BooleanType
                          BooleanValue: false
                        - Name: SalesFormsPrefs.UseSalesCustom1
                          Type: BooleanType
                          BooleanValue: true
                    - CustomField:
                        - Name: SalesFormsPrefs.SalesCustomName1
                          Type: StringType
                          StringValue: 'Crew #'
                  CustomTxnNumbers: false
                  AllowDeposit: true
                  AllowDiscount: true
                  DefaultDiscountAccount: '86'
                  AllowEstimates: true
                  ETransactionEnabledStatus: NotApplicable
                  ETransactionAttachPDF: false
                  ETransactionPaymentEnabled: false
                  IPNSupportEnabled: false
                  AllowServiceDate: false
                  AllowShipping: false
                  DefaultTerms:
                    value: '3'
                  DefaultCustomerMessage: Thank you for your business and have a great day!
                EmailMessagesPrefs:
                  InvoiceMessage:
                    Subject: Invoice from Craig's Design and Landscaping Services
                    Message: >-
                      Your invoice is attached.  Please remit payment at your
                      earliest convenience.

                      Thank you for your business - we appreciate it very much.


                      Sincerely,

                      Craig's Design and Landscaping Services
                  EstimateMessage:
                    Subject: Estimate from Craig's Design and Landscaping Services
                    Message: >-
                      Please review the estimate below.  Feel free to contact us
                      if you have any questions.

                      We look forward to working with you.


                      Sincerely,

                      Craig's Design and Landscaping Services
                  SalesReceiptMessage:
                    Subject: Sales Receipt from Craig's Design and Landscaping Services
                    Message: |-
                      Your sales receipt is attached.
                      Thank you for your business - we appreciate it very much.

                      Sincerely,
                      Craig's Design and Landscaping Services
                  StatementMessage:
                    Subject: Statement from Craig's Design and Landscaping Services
                    Message: >-
                      Your statement is attached.  Please remit payment at your
                      earliest convenience.

                      Thank you for your business - we appreciate it very much.


                      Sincerely,

                      Craig's Design and Landscaping Services
                VendorAndPurchasesPrefs:
                  TrackingByCustomer: true
                  BillableExpenseTracking: true
                  POCustomField:
                    - CustomField:
                        - Name: PurchasePrefs.UsePurchaseCustom3
                          Type: BooleanType
                          BooleanValue: false
                        - Name: PurchasePrefs.UsePurchaseCustom2
                          Type: BooleanType
                          BooleanValue: true
                        - Name: PurchasePrefs.UsePurchaseCustom1
                          Type: BooleanType
                          BooleanValue: true
                    - CustomField:
                        - Name: PurchasePrefs.PurchaseCustomName2
                          Type: StringType
                          StringValue: Sales Rep
                        - Name: PurchasePrefs.PurchaseCustomName1
                          Type: StringType
                          StringValue: 'Crew #'
                TimeTrackingPrefs:
                  UseServices: true
                  BillCustomers: true
                  ShowBillRateToAll: false
                  WorkWeekStartDate: Monday
                  MarkTimeEntriesBillable: true
                TaxPrefs:
                  UsingSalesTax: true
                  TaxGroupCodeRef:
                    value: '2'
                CurrencyPrefs:
                  MultiCurrencyEnabled: true
                  HomeCurrency:
                    value: USD
                ReportPrefs:
                  ReportBasis: Accrual
                  CalcAgingReportFromTxnDate: false
                OtherPrefs:
                  NameValue:
                    - Name: SalesFormsPrefs.DefaultCustomerMessage
                      Value: Thank you for your business and have a great day!
                    - Name: SalesFormsPrefs.DefaultItem
                      Value: '1'
                    - Name: DTXCopyMemo
                      Value: 'false'
                    - Name: UncategorizedAssetAccountId
                      Value: '32'
                    - Name: UncategorizedIncomeAccountId
                      Value: '30'
                    - Name: UncategorizedExpenseAccountId
                      Value: '31'
                    - Name: MasAccountId
                      Value: '35'
                    - Name: SFCEnabled
                      Value: 'true'
                domain: QBO
                sparse: false
                Id: '1'
                SyncToken: '4'
                MetaData:
                  CreateTime: '2016-01-13T01:07:08-08:00'
                  LastUpdatedTime: '2016-08-23T20:12:45-07:00'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/purchase:
    post:
      tags:
        - Purchase
      summary: Purchase-Delete
      description: |-
        Delete a puchase object
        Method : POST

        Sample query response

        {
          "Purchase": {
            "domain": "QBO",
            "status": "Deleted",
            "Id": "175",
            "CustomField": []
          },
          "time": "2016-08-23T22:57:39.774-07:00"
        }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Id: '175'
                SyncToken: '1'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: operation
          in: query
          schema:
            type: string
          example: delete
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/purchase/175:
    get:
      tags:
        - Purchase
      summary: Purchase-ReadById
      description: |
        Read a puchase object by Id
        Method : POST
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/purchaseorder:
    post:
      tags:
        - PurchaseOrder
      summary: PurchaseOrder-Delete
      description: |-
        Delete a puchaseorder object
        Method : POST

        Sample query response

        {
          "PurchaseOrder": {
            "domain": "QBO",
            "status": "Deleted",
            "Id": "179"
          },
          "time": "2016-08-23T23:21:36.663-07:00"
        }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Id: '179'
                SyncToken: '1'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: operation
          in: query
          schema:
            type: string
          example: delete
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/purchaseorder/178:
    get:
      tags:
        - PurchaseOrder
      summary: PurchaseOrder-ReadById
      description: |
        Read a puchase-order object
        Method : POST
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/refundreceipt:
    post:
      tags:
        - RefundReceipt
      summary: RefundReceipt-Delete
      description: |-
        Delete a refund-receipt object by Id
        Method : POST

        Sample response payload 

        {
          "RefundReceipt": {
            "domain": "QBO",
            "status": "Deleted",
            "Id": "180"
          },
          "time": "2016-08-23T23:42:38.153-07:00"
        }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Id: '180'
                SyncToken: '1'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: operation
          in: query
          schema:
            type: string
          example: delete
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/refundreceipt/66:
    get:
      tags:
        - RefundReceipt
      summary: RefundReceipt-ReadById
      description: |
        Read a refund-receipt object
        Method : GET
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/AccountList:
    get:
      tags:
        - Reports
      summary: Report-AccountList
      description: >+
        Report - Account list detail

        Method : GET


        The information below provides a reference on how to access the account
        list detail report from the QuickBooks Online Report Service.

      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/AgedPayableDetail:
    get:
      tags:
        - Reports
      summary: Report-AgedPayableDetail
      description: >+
        Report - AgedPayable aging detail

        Method : GET


        The information below provides a reference on how to access the AP Aging
        summary report from the QuickBooks Online Report Service.



      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/AgedPayables:
    get:
      tags:
        - Reports
      summary: Report-AgedPayables
      description: >+
        Report - AgedPayable aging summary

        Method : GET


        The information below provides a reference on how to access the AP Aging
        summary report from the QuickBooks Online Report Service.




      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/AgedReceivableDetail:
    get:
      tags:
        - Reports
      summary: Report-AgedReceivableDetail
      description: >+
        Report - AgedReceivableDetail aging detail

        Method : GET


        The information below provides a reference on how to access the AR Aging
        Detail report from the QuickBooks Online Report Service.




      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/AgedReceivables:
    get:
      tags:
        - Reports
      summary: Report-AgedReceivables
      description: >+
        Report - AgedReceivable aging summary

        Method : GET


        The information below provides a reference on how to access the AR Aging
        Summary report from the QuickBooks Online Report Service.





      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/BalanceSheet:
    get:
      tags:
        - Reports
      summary: Report-BalanceSheet
      description: >+
        Report - BalanceSheet

        Method : GET


        The information below provides a reference on how to query the Balance
        Sheet report from the QuickBooks Online Report Service.






      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/CashFlow:
    get:
      tags:
        - Reports
      summary: Report-CashFlow
      description: >+
        Report - CashFlow

        Method : GET


        The information below provides a reference on how to access the cash
        flow report from the QuickBooks Online Report Service.






      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/ClassSales:
    get:
      tags:
        - Reports
      summary: Report-CashSales
      description: |+
        Report - CashSales
        Method : GET







      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/CustomerBalance:
    get:
      tags:
        - Reports
      summary: Report-CustomerBalance
      description: |+
        Report - CustomerBalance
        Method : GET







      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/CustomerBalanceDetail:
    get:
      tags:
        - Reports
      summary: Report-CustomerBalanceDetail
      description: >+
        Report - CustomerBalance Detail

        Method : GET


        The information below provides a reference on how to access the Customer
        Balance Detail report from the QuickBooks Online Report Service.









      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/CustomerIncome:
    get:
      tags:
        - Reports
      summary: Report-CustomerIncome
      description: |+
        Report - Customer Income
        Method : GET










      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/CustomerSales:
    get:
      tags:
        - Reports
      summary: Report-CustomerSales
      description: |+
        Report - Customer Sales
        Method : GET










      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/DepartmentSales:
    get:
      tags:
        - Reports
      summary: Report-DepartmentSales
      description: |+
        Report - Department Sales
        Method : GET










      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/GeneralLedger:
    get:
      tags:
        - Reports
      summary: Report-GeneralLedger
      description: |+
        Report - General Ledger
        Method : GET

        Docs - https://developer.intuit.com/docs/api/accounting/general%20ledger








      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/InventoryValuationSummary:
    get:
      tags:
        - Reports
      summary: Report-InventoryValuationSummary
      description: >+
        Report - Inventory Valuation Summary

        Method : GET


        Docs -
        https://developer.intuit.com/docs/api/accounting/inventory%20valuation








      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/ItemSales:
    get:
      tags:
        - Reports
      summary: Report-ItemSales
      description: >+
        Report - Item Sales

        Method : GET


        Docs -
        https://developer.intuit.com/docs/api/accounting/sales%20by%20product








      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/ProfitAndLoss:
    get:
      tags:
        - Reports
      summary: Report-ProfitAndLoss
      description: >+
        Report - Profit and Loss

        Method : GET


        Docs -
        https://developer.intuit.com/docs/api/accounting/profit%20and%20loss








      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/ProfitAndLossDetail:
    get:
      tags:
        - Reports
      summary: Report-ProfitAndLossDetail
      description: >+
        Report - Profit and Loss Detail

        Method : GET


        Docs -
        https://developer.intuit.com/docs/api/accounting/profit%20and%20loss%20detail








      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/TrialBalance:
    get:
      tags:
        - Reports
      summary: Report-TrialBalance
      description: |+
        Report - Trial Balance 
        Method : GET

        Docs - https://developer.intuit.com/docs/api/accounting/trial%20balance







      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/TransactionList:
    get:
      tags:
        - Reports
      summary: Report-TransactionList
      description: >+
        Report - Trial List 

        Method : GET


        Docs -
        https://developer.intuit.com/docs/api/accounting/transaction%20list







      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/VendorBalance:
    get:
      tags:
        - Reports
      summary: Report-VendorBalance
      description: |+
        Report - Vendor Balance 
        Method : GET

        Docs - https://developer.intuit.com/docs/api/accounting/vendor%20balance






      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/VendorBalanceDetail:
    get:
      tags:
        - Reports
      summary: Report-VendorBalanceDetail
      description: >+
        Report - Vendor Balance Detail

        Method : GET


        Docs -
        https://developer.intuit.com/docs/api/accounting/vendor%20balance%20detail





      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/reports/VendorExpenses:
    get:
      tags:
        - Reports
      summary: Report-VendorExpense
      description: >+
        Report - Vendor Expense

        Method : GET


        Docs -
        https://developer.intuit.com/docs/api/accounting/expenses%20by%20vendor





      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/salesreceipt:
    post:
      tags:
        - SalesReceipt
      summary: SalesReceipt-Void
      description: >+
        Void a salesreceipt object

        Method : POST


        Use a sparse update operation with include=void to void an existing
        SalesReceipt object; include a minimum of SalesReceipt.Id and
        SalesReceipt.SyncToken. The transaction remains active but all amounts
        and quantities are zeroed and the string, Voided, is injected into
        SalesReceipt.PrivateNote, prepended to existing text if present. If a
        sales receipt is paid and funds have been deposited, you must delete the
        associated deposit object before voiding the salesreceipt object.

      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                sparse: true
                Id: '188'
                SyncToken: '0'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: include
          in: query
          schema:
            type: string
          example: void
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/salesreceipt/181:
    get:
      tags:
        - SalesReceipt
      summary: SalesReceipt-ReadByID
      description: |
        Create an salesreceipt object
        Method : POST
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/taxagency:
    post:
      tags:
        - TaxAgency
      summary: TaxAgency-Create
      description: |-
        Create a tax-agency object
        Method : POST

        Sample response payload

        {
          "SalesReceipt": {
            "domain": "QBO",
            "status": "Deleted",
            "Id": "181"
          },
          "time": "2016-09-02T02:17:24.353-07:00"
        }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                DisplayName: CityTaxAgency
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/taxagency/3:
    get:
      tags:
        - TaxAgency
      summary: TaxAgency-ReadByID
      description: |
        Get a tax-agency object by ID
        Method : GET
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/taxcode/2:
    get:
      tags:
        - TaxCode
      summary: TaxCode-ReadById
      description: |
        Read a taxcode by Id
        Method : POST
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/text
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/taxrate/1:
    get:
      tags:
        - TaxRate
      summary: TaxRate-ReadById
      description: |
        Read a taxRate by Id
        Method : POST
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/taxservice/taxcode:
    post:
      tags:
        - TaxService
      summary: TaxService-Create
      description: |
        Use TaxService to create taxcode and corresponding taxrates
        Method : POST
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                TaxCode: MyTaxCodeName
                TaxRateDetails:
                  - TaxRateName: myNewTaxRateName
                    RateValue: '8'
                    TaxAgencyId: '1'
                    TaxApplicableOn: Sales
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/term:
    post:
      tags:
        - Term
      summary: Term-Delete
      description: >-
        Update a term object

        Method : POST


        Term object can't be deleted parmanently. It can only be deactived by
        setting the 'Active' attribute to false.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Name: Term1120-Updated
                Active: false
                Type: STANDARD
                DiscountPercent: 0
                DueDays: 120
                domain: QBO
                sparse: false
                Id: '8'
                SyncToken: '1'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/term/8:
    get:
      tags:
        - Term
      summary: Term-ReadById
      description: |+
        Read a term object by Id
        Method : Get

      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/timeactivity:
    post:
      tags:
        - TimeActivity
      summary: TimeActivity-Delete
      description: |+
        Delete a time-activity object by Id
        Method : POST

      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Id: '6'
                SyncToken: '1'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: operation
          in: query
          schema:
            type: string
          example: delete
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/transfer:
    post:
      tags:
        - Transfer
      summary: Transfer-Delete
      description: |+
        Delete a transfer object
        Method : POST

        Sample response payload

        {
          "Transfer": {
            "domain": "QBO",
            "status": "Deleted",
            "Id": "183"
          },
          "time": "2016-09-02T02:57:17.145-07:00"
        }

      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Id: '183'
                SyncToken: '1'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: operation
          in: query
          schema:
            type: string
          example: delete
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/transfer/184:
    get:
      tags:
        - Transfer
      summary: Transfer-ReadById
      description: |+
        Read a transfer object by Id
        Method : GET

      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/vendor:
    post:
      tags:
        - Vendor
      summary: Vendor-Delete
      description: >-
        Delete a vendor object

        Method : POST


        Vendor objects can't be deleted permanently. It can only be deactivated
        by setting the 'Active' attribute to false
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                BillAddr:
                  Id: '111'
                  Line1: Dianne's Auto Shop
                  Line2: Dianne Bradley
                  Line3: 29834 Mustang Ave.
                  City: Millbrae
                  Country: U.S.A
                  CountrySubDivisionCode: CA
                  PostalCode: '94030'
                TaxIdentifier: XXXXXX8293
                Balance: 0
                AcctNum: '35372649'
                Vendor1099: false
                CurrencyRef:
                  value: USD
                  name: United States Dollar
                domain: QBO
                sparse: false
                Id: '70'
                SyncToken: '0'
                Title: Ms.
                GivenName: Dianne
                FamilyName: Bradley
                Suffix: Sr.
                CompanyName: Dianne's Auto Shop
                DisplayName: Dianne's Auto Shop-Updated
                PrintOnCheckName: Dianne's Auto Shop
                Active: false
                PrimaryPhone:
                  FreeFormNumber: (650) 555-2342
                Mobile:
                  FreeFormNumber: (650) 555-2000
                PrimaryEmailAddr:
                  Address: dbradley@myemail.com
                WebAddr:
                  URI: http://DiannesAutoShop.com
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/vendor/70:
    get:
      tags:
        - Vendor
      summary: Vendor-ReadById
      description: |+
        Read a vendor object by Id
        Method : GET

      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/vendorcredit:
    post:
      tags:
        - VendorCredit
      summary: VendorCredit-Delete
      description: |-
        Delete a vendorcredit object by Id
        Method : POST

        Sample response body 

        {
          "VendorCredit": {
            "domain": "QBO",
            "status": "Deleted",
            "Id": "185"
          },
          "time": "2016-09-02T03:14:13.909-07:00"
        }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                Id: '185'
                SyncToken: '1'
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: operation
          in: query
          schema:
            type: string
          example: delete
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /v3/company/{companyid}/vendorcredit/185:
    get:
      tags:
        - VendorCredit
      summary: VendorCredit-ReadById
      description: >-
        Read a vendorcredit object by Id

        Method : GET


        Please change the VendorCredit it from 165 to a valid VendorCredit
        objectId which exists in your QBO account
      security:
        - oauth2Auth: []
      parameters:
        - name: User-Agent
          in: header
          schema:
            type: string
          example: '{{UserAgent}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: minorversion
          in: query
          schema:
            type: string
          example: '{{minorversion}}'
        - name: companyid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
